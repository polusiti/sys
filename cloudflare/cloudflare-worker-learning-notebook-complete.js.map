{
  "version": 3,
  "sources": ["../bundle-PJ7Vbo/checked-fetch.js", "../../../node_modules/@tsndr/cloudflare-worker-jwt/index.js", "../../../cloudflare-worker-learning-notebook-complete.js", "../../../../../../usr/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../usr/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-PJ7Vbo/middleware-insertion-facade.js", "../../../../../../usr/lib/node_modules/wrangler/templates/middleware/common.ts", "../bundle-PJ7Vbo/middleware-loader.entry.ts"],
  "sourceRoot": "/home/higuc/sys/.wrangler/tmp/dev-tmXPiV",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "// src/utils.ts\nfunction bytesToByteString(bytes) {\n  let byteStr = \"\";\n  for (let i = 0; i < bytes.byteLength; i++) {\n    byteStr += String.fromCharCode(bytes[i]);\n  }\n  return byteStr;\n}\nfunction byteStringToBytes(byteStr) {\n  let bytes = new Uint8Array(byteStr.length);\n  for (let i = 0; i < byteStr.length; i++) {\n    bytes[i] = byteStr.charCodeAt(i);\n  }\n  return bytes;\n}\nfunction arrayBufferToBase64String(arrayBuffer) {\n  return btoa(bytesToByteString(new Uint8Array(arrayBuffer)));\n}\nfunction base64StringToUint8Array(b64str) {\n  return byteStringToBytes(atob(b64str));\n}\nfunction textToUint8Array(str) {\n  return byteStringToBytes(str);\n}\nfunction arrayBufferToBase64Url(arrayBuffer) {\n  return arrayBufferToBase64String(arrayBuffer).replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\nfunction base64UrlToUint8Array(b64url) {\n  return base64StringToUint8Array(b64url.replace(/-/g, \"+\").replace(/_/g, \"/\").replace(/\\s/g, \"\"));\n}\nfunction textToBase64Url(str) {\n  const encoder = new TextEncoder();\n  const charCodes = encoder.encode(str);\n  const binaryStr = String.fromCharCode(...charCodes);\n  return btoa(binaryStr).replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\nfunction pemToBinary(pem) {\n  return base64StringToUint8Array(pem.replace(/-+(BEGIN|END).*/g, \"\").replace(/\\s/g, \"\"));\n}\nasync function importTextSecret(key, algorithm, keyUsages) {\n  return await crypto.subtle.importKey(\"raw\", textToUint8Array(key), algorithm, true, keyUsages);\n}\nasync function importJwk(key, algorithm, keyUsages) {\n  return await crypto.subtle.importKey(\"jwk\", key, algorithm, true, keyUsages);\n}\nasync function importPublicKey(key, algorithm, keyUsages) {\n  return await crypto.subtle.importKey(\"spki\", pemToBinary(key), algorithm, true, keyUsages);\n}\nasync function importPrivateKey(key, algorithm, keyUsages) {\n  return await crypto.subtle.importKey(\"pkcs8\", pemToBinary(key), algorithm, true, keyUsages);\n}\nasync function importKey(key, algorithm, keyUsages) {\n  if (typeof key === \"object\")\n    return importJwk(key, algorithm, keyUsages);\n  if (typeof key !== \"string\")\n    throw new Error(\"Unsupported key type!\");\n  if (key.includes(\"PUBLIC\"))\n    return importPublicKey(key, algorithm, keyUsages);\n  if (key.includes(\"PRIVATE\"))\n    return importPrivateKey(key, algorithm, keyUsages);\n  return importTextSecret(key, algorithm, keyUsages);\n}\nfunction decodePayload(raw) {\n  const bytes = Array.from(atob(raw), (char) => char.charCodeAt(0));\n  const decodedString = new TextDecoder(\"utf-8\").decode(new Uint8Array(bytes));\n  return JSON.parse(decodedString);\n}\n\n// src/index.ts\nif (typeof crypto === \"undefined\" || !crypto.subtle)\n  throw new Error(\"SubtleCrypto not supported!\");\nvar algorithms = {\n  none: { name: \"none\" },\n  ES256: { name: \"ECDSA\", namedCurve: \"P-256\", hash: { name: \"SHA-256\" } },\n  ES384: { name: \"ECDSA\", namedCurve: \"P-384\", hash: { name: \"SHA-384\" } },\n  ES512: { name: \"ECDSA\", namedCurve: \"P-521\", hash: { name: \"SHA-512\" } },\n  HS256: { name: \"HMAC\", hash: { name: \"SHA-256\" } },\n  HS384: { name: \"HMAC\", hash: { name: \"SHA-384\" } },\n  HS512: { name: \"HMAC\", hash: { name: \"SHA-512\" } },\n  RS256: { name: \"RSASSA-PKCS1-v1_5\", hash: { name: \"SHA-256\" } },\n  RS384: { name: \"RSASSA-PKCS1-v1_5\", hash: { name: \"SHA-384\" } },\n  RS512: { name: \"RSASSA-PKCS1-v1_5\", hash: { name: \"SHA-512\" } }\n};\nasync function sign(payload, secret, options = \"HS256\") {\n  if (typeof options === \"string\")\n    options = { algorithm: options };\n  options = { algorithm: \"HS256\", header: { typ: \"JWT\", ...options.header ?? {} }, ...options };\n  if (!payload || typeof payload !== \"object\")\n    throw new Error(\"payload must be an object\");\n  if (options.algorithm !== \"none\" && (!secret || typeof secret !== \"string\" && typeof secret !== \"object\"))\n    throw new Error(\"secret must be a string, a JWK object or a CryptoKey object\");\n  if (typeof options.algorithm !== \"string\")\n    throw new Error(\"options.algorithm must be a string\");\n  const algorithm = algorithms[options.algorithm];\n  if (!algorithm)\n    throw new Error(\"algorithm not found\");\n  if (!payload.iat)\n    payload.iat = Math.floor(Date.now() / 1e3);\n  const partialToken = `${textToBase64Url(JSON.stringify({ ...options.header, alg: options.algorithm }))}.${textToBase64Url(JSON.stringify(payload))}`;\n  if (options.algorithm === \"none\")\n    return partialToken;\n  const key = secret instanceof CryptoKey ? secret : await importKey(secret, algorithm, [\"sign\"]);\n  const signature = await crypto.subtle.sign(algorithm, key, textToUint8Array(partialToken));\n  return `${partialToken}.${arrayBufferToBase64Url(signature)}`;\n}\nasync function verify(token, secret, options = \"HS256\") {\n  if (typeof options === \"string\")\n    options = { algorithm: options };\n  options = { algorithm: \"HS256\", clockTolerance: 0, throwError: false, ...options };\n  if (typeof token !== \"string\")\n    throw new Error(\"token must be a string\");\n  if (options.algorithm !== \"none\" && typeof secret !== \"string\" && typeof secret !== \"object\")\n    throw new Error(\"secret must be a string, a JWK object or a CryptoKey object\");\n  if (typeof options.algorithm !== \"string\")\n    throw new Error(\"options.algorithm must be a string\");\n  const tokenParts = token.split(\".\", 3);\n  if (tokenParts.length < 2)\n    throw new Error(\"token must consist of 2 or more parts\");\n  const [tokenHeader, tokenPayload, tokenSignature] = tokenParts;\n  const algorithm = algorithms[options.algorithm];\n  if (!algorithm)\n    throw new Error(\"algorithm not found\");\n  const decodedToken = decode(token);\n  try {\n    if (decodedToken.header?.alg !== options.algorithm)\n      throw new Error(\"INVALID_SIGNATURE\");\n    if (decodedToken.payload) {\n      const now = Math.floor(Date.now() / 1e3);\n      if (decodedToken.payload.nbf && decodedToken.payload.nbf > now && decodedToken.payload.nbf - now > (options.clockTolerance ?? 0))\n        throw new Error(\"NOT_YET_VALID\");\n      if (decodedToken.payload.exp && decodedToken.payload.exp <= now && now - decodedToken.payload.exp > (options.clockTolerance ?? 0))\n        throw new Error(\"EXPIRED\");\n    }\n    if (algorithm.name === \"none\")\n      return decodedToken;\n    const key = secret instanceof CryptoKey ? secret : await importKey(secret, algorithm, [\"verify\"]);\n    if (!await crypto.subtle.verify(algorithm, key, base64UrlToUint8Array(tokenSignature), textToUint8Array(`${tokenHeader}.${tokenPayload}`)))\n      throw new Error(\"INVALID_SIGNATURE\");\n    return decodedToken;\n  } catch (err) {\n    if (options.throwError)\n      throw err;\n    return;\n  }\n}\nfunction decode(token) {\n  return {\n    header: decodePayload(token.split(\".\")[0].replace(/-/g, \"+\").replace(/_/g, \"/\")),\n    payload: decodePayload(token.split(\".\")[1].replace(/-/g, \"+\").replace(/_/g, \"/\"))\n  };\n}\nvar index_default = {\n  sign,\n  verify,\n  decode\n};\nexport {\n  decode,\n  index_default as default,\n  sign,\n  verify\n};\n", "/**\n * Cloudflare Workers - Learning Notebook Complete Integration\n * \u7D71\u5408\u3055\u308C\u305FD1 API - \u65E2\u5B58\u6A5F\u80FD + Learning Notebook\u56FA\u6709\u6A5F\u80FD\n */\n\nimport { sign, verify } from '@tsndr/cloudflare-worker-jwt';\n\nexport default {\n  async fetch(request, env, ctx) {\n    // CORS\u8A2D\u5B9A\n    const url = new URL(request.url);\n    const origin = request.headers.get('Origin');\n\n    // \u8A31\u53EF\u3059\u308B\u30AA\u30EA\u30B8\u30F3\u306E\u30EA\u30B9\u30C8\n    const allowedOrigins = [\n      'https://allfrom0.top',\n      'https://www.allfrom0.top',\n      'https://api.allfrom0.top'\n    ];\n\n    const corsHeaders = {\n      'Access-Control-Allow-Origin': allowedOrigins.includes(origin) ? origin : 'https://allfrom0.top',\n      'Access-Control-Allow-Credentials': 'true',\n      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n      'Access-Control-Max-Age': '86400',\n    };\n\n    // OPTIONS\u30EA\u30AF\u30A8\u30B9\u30C8\uFF08CORS preflight\uFF09\n    if (request.method === 'OPTIONS') {\n      return new Response(null, { headers: corsHeaders });\n    }\n\n    try {\n      const path = url.pathname;\n\n      // \u8A8D\u8A3C\u4E0D\u8981\u306E\u30A8\u30F3\u30C9\u30DD\u30A4\u30F3\u30C8\n      if (path === '/api/health') {\n        return jsonResponse({\n          status: 'ok',\n          service: 'learning-notebook-complete-api',\n          database: 'connected',\n          timestamp: new Date().toISOString(),\n          version: '1.0.1-fixed',\n          rpId: 'allfrom0.top'\n        }, 200, corsHeaders);\n      }\n\n      // \u5B66\u7FD2\u30CE\u30FC\u30C8\u554F\u984C\u53D6\u5F97\uFF08\u8A8D\u8A3C\u4E0D\u8981\uFF09\n      if (path === '/api/note/questions' && request.method === 'GET') {\n        return await getNoteQuestions(request, env, corsHeaders);\n      }\n\n      // \u5B66\u7FD2\u30CE\u30FC\u30C8\u554F\u984C\u4F5C\u6210\uFF08\u8A8D\u8A3C\u4E0D\u8981\uFF09\n      if (path === '/api/note/questions' && request.method === 'POST') {\n        return await createNoteQuestion(request, env, corsHeaders);\n      }\n\n      // \u5B66\u7FD2\u30CE\u30FC\u30C8\u554F\u984C\u66F4\u65B0\uFF08\u8A8D\u8A3C\u4E0D\u8981\uFF09\n      if (path.match(/^\\/api\\/note\\/questions\\/[\\w\\-]+$/) && request.method === 'PUT') {\n        const questionId = path.split('/').pop();\n        return await updateNoteQuestion(questionId, request, env, corsHeaders);\n      }\n\n      // \u5B66\u7FD2\u30CE\u30FC\u30C8\u554F\u984C\u524A\u9664\uFF08\u8A8D\u8A3C\u4E0D\u8981\uFF09\n      if (path.match(/^\\/api\\/note\\/questions\\/[\\w\\-]+$/) && request.method === 'DELETE') {\n        const questionId = path.split('/').pop();\n        return await deleteNoteQuestion(questionId, env, corsHeaders);\n      }\n\n      // \u97F3\u58F0\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\uFF08\u8A8D\u8A3C\u4E0D\u8981\u30FB\u7C21\u6613\u7248\uFF09\n      if (path === '/api/upload' && request.method === 'POST') {\n        return await uploadAudioSimple(request, env, corsHeaders);\n      }\n\n      // \u30D1\u30C3\u30BB\u30FC\u30B8\u5358\u4F4D\u3067\u306E\u554F\u984C\u53D6\u5F97\uFF08\u6771\u5927\u30EA\u30B9\u30CB\u30F3\u30B0\u5F62\u5F0F\uFF09\n      if (path === '/api/note/passages' && request.method === 'GET') {\n        return await getPassages(request, env, corsHeaders);\n      }\n\n      // \u30D1\u30C3\u30BB\u30FC\u30B8\u4F5C\u6210\uFF08\u8907\u6570\u554F\u984C\u3092\u307E\u3068\u3081\u3066\u767B\u9332\uFF09\n      if (path === '/api/note/passages' && request.method === 'POST') {\n        return await createPassage(request, env, corsHeaders);\n      }\n\n      // \u554F\u984C\u7D71\u8A08\u53D6\u5F97\uFF08\u8A8D\u8A3C\u4E0D\u8981\uFF09\n      if (path === '/api/note/question-stats' && request.method === 'GET') {\n        return await getQuestionStats(request, env, corsHeaders);\n      }\n\n      // \u89E3\u7B54\u7D50\u679C\u8A18\u9332\uFF08\u8A8D\u8A3C\u4E0D\u8981\uFF09\n      if (path === '/api/note/question-attempts' && request.method === 'POST') {\n        return await recordQuestionAttempts(request, env, corsHeaders);\n      }\n\n      // \u554F\u984C\u8A55\u4FA1\uFF08\u8A8D\u8A3C\u4E0D\u8981\uFF09\n      if (path === '/api/note/question-ratings' && request.method === 'POST') {\n        return await rateQuestion(request, env, corsHeaders);\n      }\n\n      // \u554F\u984C\u8A55\u4FA1\u53D6\u5F97\uFF08\u8A8D\u8A3C\u4E0D\u8981\uFF09\n      if (path === '/api/note/question-ratings' && request.method === 'GET') {\n        return await getQuestionRatings(request, env, corsHeaders);\n      }\n\n      // === \u8A8D\u8A3C\u30A8\u30F3\u30C9\u30DD\u30A4\u30F3\u30C8 ===\n\n      // Learning Notebook\u5F62\u5F0F\u30E6\u30FC\u30B6\u30FC\u767B\u9332\n      if (path === '/api/auth/register' && request.method === 'POST') {\n        return await handleLearningNotebookRegister(request, env, corsHeaders);\n      }\n\n      // \u5F93\u6765\u578B\u30E6\u30FC\u30B6\u30FC\u767B\u9332\uFF08\u5F8C\u65B9\u4E92\u63DB\u6027\uFF09\n      if (path === '/api/auth/register-legacy' && request.method === 'POST') {\n        return await registerUserLegacy(request, env, corsHeaders);\n      }\n\n      // \u5F93\u6765\u578B\u30ED\u30B0\u30A4\u30F3\uFF08\u5F8C\u65B9\u4E92\u63DB\u6027\uFF09\n      if (path === '/api/auth/login' && request.method === 'POST') {\n        return await loginUserLegacy(request, env, corsHeaders);\n      }\n\n      // \u30D1\u30B9\u30AD\u30FC\u767B\u9332\u958B\u59CB\n      if (path === '/api/auth/passkey/register/begin' && request.method === 'POST') {\n        return await handlePasskeyRegisterBegin(request, env, corsHeaders);\n      }\n\n      // \u30D1\u30B9\u30AD\u30FC\u767B\u9332\u5B8C\u4E86\n      if (path === '/api/auth/passkey/register/complete' && request.method === 'POST') {\n        return await handlePasskeyRegisterComplete(request, env, corsHeaders);\n      }\n\n      // \u30D1\u30B9\u30AD\u30FC\u30ED\u30B0\u30A4\u30F3\u958B\u59CB\n      if (path === '/api/auth/passkey/login/begin' && request.method === 'POST') {\n        return await handlePasskeyLoginBegin(request, env, corsHeaders);\n      }\n\n      // \u30D1\u30B9\u30AD\u30FC\u30ED\u30B0\u30A4\u30F3\u5B8C\u4E86\n      if (path === '/api/auth/passkey/login/complete' && request.method === 'POST') {\n        return await handlePasskeyLoginComplete(request, env, corsHeaders);\n      }\n\n      // \u30E6\u30FC\u30B6\u30FC\u60C5\u5831\u53D6\u5F97\n      if (path === '/api/auth/me' && request.method === 'GET') {\n        return await handleGetUser(request, env, corsHeaders);\n      }\n\n      // === \u30EA\u30AB\u30D0\u30EA\u30FC\u30B7\u30B9\u30C6\u30E0\u30A8\u30F3\u30C9\u30DD\u30A4\u30F3\u30C8 ===\n\n      // \u30E6\u30FC\u30B6\u30FC\u7528\u30EA\u30AB\u30D0\u30EA\u30FC\u8981\u6C42\n      if (path === '/api/recovery/request' && request.method === 'POST') {\n        return await handleRecoveryRequest(request, env, corsHeaders);\n      }\n\n      // \u7BA1\u7406\u8005\u7528: \u30E6\u30FC\u30B6\u30FC\u60C5\u5831\u53D6\u5F97\n      if (path.startsWith('/api/admin/user/') && request.method === 'GET') {\n        return await handleAdminGetUser(request, env, corsHeaders);\n      }\n\n      // \u7BA1\u7406\u8005\u7528: \u30EA\u30AB\u30D0\u30EA\u30FC\u627F\u8A8D\uFF08\u30D1\u30B9\u30AD\u30FC\u524A\u9664\uFF09\n      if (path === '/api/admin/recovery/approve' && request.method === 'POST') {\n        return await handleAdminApproveRecovery(request, env, corsHeaders);\n      }\n\n      // \u7BA1\u7406\u8005\u7528: \u30EA\u30AB\u30D0\u30EA\u30FC\u8981\u6C42\u4E00\u89A7\n      if (path === '/api/admin/recovery/requests' && request.method === 'GET') {\n        return await handleAdminGetRecoveryRequests(request, env, corsHeaders);\n      }\n\n      // === \u9032\u6357\u30C8\u30E9\u30C3\u30AD\u30F3\u30B0\u30A8\u30F3\u30C9\u30DD\u30A4\u30F3\u30C8 ===\n\n      // \u9032\u6357\u53D6\u5F97\n      if (path === '/api/note/progress' && request.method === 'GET') {\n        return await handleGetProgress(request, env, corsHeaders);\n      }\n\n      // \u9032\u6357\u4FDD\u5B58\n      if (path === '/api/note/progress' && request.method === 'POST') {\n        return await handleSaveProgress(request, env, corsHeaders);\n      }\n\n      // === \u4FDD\u8B77\u3055\u308C\u305F\u30A8\u30F3\u30C9\u30DD\u30A4\u30F3\u30C8 - JWT\u8A8D\u8A3C\u30C1\u30A7\u30C3\u30AF ===\n      const authResult = await authenticateUser(request, env);\n      if (!authResult.success) {\n        return jsonResponse({ error: authResult.error }, authResult.status, corsHeaders);\n      }\n\n      const user = authResult.user;\n\n      // === \u5B66\u7FD2\u5C65\u6B74\u30FB\u5FA9\u7FD2\u6A5F\u80FDAPI\uFF08\u8A8D\u8A3C\u6E08\u307F\uFF09 ===\n\n      // \u5B66\u7FD2\u30BB\u30C3\u30B7\u30E7\u30F3\u958B\u59CB\n      if (path === '/api/study/session/start' && request.method === 'POST') {\n        return await handleStudySessionStart(request, env, corsHeaders);\n      }\n\n      // \u5B66\u7FD2\u30BB\u30C3\u30B7\u30E7\u30F3\u7D42\u4E86\n      if (path === '/api/study/session/end' && request.method === 'POST') {\n        return await handleStudySessionEnd(request, env, corsHeaders);\n      }\n\n      // \u554F\u984C\u56DE\u7B54\u8A18\u9332\n      if (path === '/api/study/record' && request.method === 'POST') {\n        return await handleStudyRecord(request, env, corsHeaders);\n      }\n\n      // \u5B66\u7FD2\u5C65\u6B74\u53D6\u5F97\n      if (path === '/api/study/history' && request.method === 'GET') {\n        return await handleGetStudyHistory(request, env, corsHeaders);\n      }\n\n      // \u5B66\u7FD2\u7D71\u8A08\u53D6\u5F97\n      if (path === '/api/study/stats' && request.method === 'GET') {\n        return await handleGetStudyStats(request, env, corsHeaders);\n      }\n\n      // \u9593\u9055\u3048\u305F\u554F\u984C\u53D6\u5F97\uFF08\u5FA9\u7FD2\u7528\uFF09\n      if (path === '/api/study/wrong-answers' && request.method === 'GET') {\n        return await handleGetWrongAnswers(request, env, corsHeaders);\n      }\n\n      // \u554F\u984C\u3092\u300C\u7FD2\u5F97\u6E08\u307F\u300D\u306B\u30DE\u30FC\u30AF\n      if (path === '/api/study/wrong-answers/master' && request.method === 'POST') {\n        return await handleMarkAsMastered(request, env, corsHeaders);\n      }\n\n      // \u30E6\u30FC\u30B6\u30FC\u30D7\u30ED\u30D5\u30A3\u30FC\u30EB\u53D6\u5F97\n      if (path === '/api/user/profile' && request.method === 'GET') {\n        return await getUserProfile(user, corsHeaders);\n      }\n\n      // \u79D1\u76EE\u4E00\u89A7\u53D6\u5F97\n      if (path === '/api/subjects' && request.method === 'GET') {\n        return await getSubjects(env, corsHeaders);\n      }\n\n      // \u554F\u984C\u30BB\u30C3\u30C8\u95A2\u9023API\n      if (path.match(/^\\/api\\/questions\\/(\\w+)$/) && request.method === 'POST') {\n        const subjectCode = path.match(/^\\/api\\/questions\\/(\\w+)$/)[1];\n        return await saveQuestions(request, env, user, subjectCode, corsHeaders);\n      }\n\n      if (path.match(/^\\/api\\/questions\\/(\\w+)$/) && request.method === 'GET') {\n        const subjectCode = path.match(/^\\/api\\/questions\\/(\\w+)$/)[1];\n        return await loadQuestions(env, subjectCode, corsHeaders);\n      }\n\n      // \u554F\u984C\u30BB\u30C3\u30C8\u4E00\u89A7\u53D6\u5F97\n      if (path.match(/^\\/api\\/questions\\/(\\w+)\\/sets$/) && request.method === 'GET') {\n        const subjectCode = path.match(/^\\/api\\/questions\\/(\\w+)\\/sets$/)[1];\n        return await getQuestionSets(env, subjectCode, corsHeaders);\n      }\n\n      // \u97F3\u58F0\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9 API\uFF08R2\u4F7F\u7528\uFF09\n      if (path === '/api/upload/audio' && request.method === 'POST') {\n        return await uploadAudio(request, env, user, corsHeaders);\n      }\n\n      // \u97F3\u58F0\u30D5\u30A1\u30A4\u30EB\u4E00\u89A7\u53D6\u5F97\n      if (path === '/api/audio/files' && request.method === 'GET') {\n        return await listAudioFiles(env, corsHeaders);\n      }\n\n      return jsonResponse({ error: '\u30A8\u30F3\u30C9\u30DD\u30A4\u30F3\u30C8\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093' }, 404, corsHeaders);\n\n    } catch (error) {\n      console.error('Workers \u30A8\u30E9\u30FC:', error);\n      return jsonResponse({\n        error: '\u30B5\u30FC\u30D0\u30FC\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F',\n        details: error.message\n      }, 500, corsHeaders);\n    }\n  }\n};\n\n// === Learning Notebook \u56FA\u6709\u306E\u8A8D\u8A3C\u6A5F\u80FD ===\n\n// Learning Notebook\u5F62\u5F0F\u30E6\u30FC\u30B6\u30FC\u767B\u9332\nasync function handleLearningNotebookRegister(request, env, corsHeaders) {\n  try {\n    const { userId, displayName, secretAnswerHash } = await request.json();\n\n    if (!userId || !displayName || !secretAnswerHash) {\n      return jsonResponse({\n        error: '\u30E6\u30FC\u30B6\u30FCID\u3001\u8868\u793A\u540D\u3001\u79D8\u5BC6\u306E\u8CEA\u554F\u306E\u7B54\u3048\u304C\u5FC5\u8981\u3067\u3059'\n      }, 400, corsHeaders);\n    }\n\n    // \u30E6\u30FC\u30B6\u30FC\u540D\u306E\u691C\u8A3C\uFF083\u6587\u5B57\u4EE5\u4E0A\u3001\u82F1\u6570\u5B57\u306E\u307F\uFF09\n    if (!/^[a-zA-Z0-9_-]{3,}$/.test(userId)) {\n      return jsonResponse({\n        error: '\u30E6\u30FC\u30B6\u30FCID\u306F3\u6587\u5B57\u4EE5\u4E0A\u306E\u82F1\u6570\u5B57\u3001\u30CF\u30A4\u30D5\u30F3\u3001\u30A2\u30F3\u30C0\u30FC\u30B9\u30B3\u30A2\u306E\u307F\u4F7F\u7528\u53EF\u80FD\u3067\u3059'\n      }, 400, corsHeaders);\n    }\n\n    // \u30E6\u30FC\u30B6\u30FCID\u3068\u8868\u793A\u540D\u306E\u91CD\u8907\u30C1\u30A7\u30C3\u30AF\n    const existingUser = await env.TESTAPP_DB.prepare(\n      'SELECT id FROM users WHERE username = ? OR display_name = ?'\n    ).bind(userId, displayName).first();\n\n    if (existingUser) {\n      return jsonResponse({\n        error: '\u3053\u306E\u30E6\u30FC\u30B6\u30FCID\u307E\u305F\u306F\u8868\u793A\u540D\u306F\u65E2\u306B\u4F7F\u7528\u3055\u308C\u3066\u3044\u307E\u3059'\n      }, 409, corsHeaders);\n    }\n\n    // \u30E6\u30FC\u30B6\u30FC\u4F5C\u6210\uFF08\u79D8\u5BC6\u306E\u8CEA\u554F\u306E\u7B54\u3048\u306E\u30CF\u30C3\u30B7\u30E5\u3092\u4FDD\u5B58\uFF09\n    const result = await env.TESTAPP_DB.prepare(\n      'INSERT INTO users (username, email, password_hash, display_name, secret_question, secret_answer_hash, email_verified, created_at) VALUES (?, ?, ?, ?, ?, ?, 0, datetime(\"now\"))'\n    ).bind(userId, `${userId}@ln.local`, 'ln-passkey-auth', displayName, '\u3042\u306A\u305F\u306E\u597D\u304D\u306A\u30A2\u30CB\u30E1\u30AD\u30E3\u30E9\u306F\uFF1F', secretAnswerHash).run();\n\n    return jsonResponse({\n      success: true,\n      message: '\u30E6\u30FC\u30B6\u30FC\u767B\u9332\u304C\u5B8C\u4E86\u3057\u307E\u3057\u305F',\n      userId: result.meta.last_row_id,\n      user: {\n        id: result.meta.last_row_id,\n        userId: userId,\n        displayName: displayName\n      }\n    }, 201, corsHeaders);\n\n  } catch (error) {\n    console.error('Learning Notebook\u767B\u9332\u30A8\u30E9\u30FC:', error);\n    return jsonResponse({\n      error: '\u30E6\u30FC\u30B6\u30FC\u767B\u9332\u306B\u5931\u6557\u3057\u307E\u3057\u305F',\n      details: error.message\n    }, 500, corsHeaders);\n  }\n}\n\n// \u30D1\u30B9\u30AD\u30FC\u767B\u9332\u958B\u59CB\nasync function handlePasskeyRegisterBegin(request, env, corsHeaders) {\n  try {\n    const { userId } = await request.json();\n\n    if (!userId) {\n      return jsonResponse({\n        error: '\u30E6\u30FC\u30B6\u30FCID\u304C\u5FC5\u8981\u3067\u3059'\n      }, 400, corsHeaders);\n    }\n\n    // \u30E6\u30FC\u30B6\u30FC\u691C\u8A3C\n    const user = await env.TESTAPP_DB.prepare(\n      'SELECT * FROM users WHERE username = ? OR display_name = ? OR id = ?'\n    ).bind(userId, userId, userId).first();\n\n    if (!user) {\n      return jsonResponse({\n        error: '\u30E6\u30FC\u30B6\u30FC\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093\u3002\u307E\u305A\u30E6\u30FC\u30B6\u30FC\u767B\u9332\u3092\u884C\u3063\u3066\u304F\u3060\u3055\u3044'\n      }, 404, corsHeaders);\n    }\n\n    // WebAuthn challenge\u751F\u6210\n    const challenge = generateChallenge();\n    const expiresAt = new Date(Date.now() + 5 * 60 * 1000).toISOString(); // 5\u5206\n\n    // Challenge\u3092D1\u306B\u4FDD\u5B58\n    await env.TESTAPP_DB.prepare(\n      'INSERT INTO webauthn_challenges (challenge, user_id, operation_type, expires_at) VALUES (?, ?, \"registration\", ?)'\n    ).bind(challenge, user.id, expiresAt).run();\n\n    // \u65E2\u5B58\u306E\u30AF\u30EC\u30C7\u30F3\u30B7\u30E3\u30EB\u3092\u53D6\u5F97\n    const existingCredentials = await env.TESTAPP_DB.prepare(\n      'SELECT credential_id FROM webauthn_credentials WHERE user_id = ?'\n    ).bind(user.id).all();\n\n    const allowCredentials = (existingCredentials.results || []).map(cred => ({\n      id: cred.credential_id,\n      type: 'public-key'\n    }));\n\n    // \u56FA\u5B9ARPID\u8A2D\u5B9A - \u5E38\u306B\u30E1\u30A4\u30F3\u30C9\u30E1\u30A4\u30F3\u3092\u4F7F\u7528\n    let rpId = 'allfrom0.top';\n\n    const publicKeyCredentialCreationOptions = {\n      challenge: challenge,\n      rp: {\n        name: 'Learning Notebook',\n        id: rpId\n      },\n      user: {\n        id: user.id.toString(),\n        name: user.username,\n        displayName: user.display_name\n      },\n      pubKeyCredParams: [\n        { alg: -7, type: \"public-key\" }, // ES256\n        { alg: -257, type: \"public-key\" } // RS256\n      ],\n      authenticatorSelection: {\n        authenticatorAttachment: \"platform\",\n        userVerification: \"preferred\"\n      },\n      timeout: 60000,\n      excludeCredentials: allowCredentials\n    };\n\n    return jsonResponse(publicKeyCredentialCreationOptions, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('\u30D1\u30B9\u30AD\u30FC\u767B\u9332\u958B\u59CB\u30A8\u30E9\u30FC:', error);\n    return jsonResponse({\n      error: '\u30D1\u30B9\u30AD\u30FC\u767B\u9332\u958B\u59CB\u306B\u5931\u6557\u3057\u307E\u3057\u305F'\n    }, 500, corsHeaders);\n  }\n}\n\n// \u30D1\u30B9\u30AD\u30FC\u767B\u9332\u5B8C\u4E86\nasync function handlePasskeyRegisterComplete(request, env, corsHeaders) {\n  try {\n    const { credential, challenge, userId } = await request.json();\n\n    // Challenge\u691C\u8A3C\n    const challengeRecord = await env.TESTAPP_DB.prepare(\n      'SELECT * FROM webauthn_challenges WHERE challenge = ? AND user_id = ? AND operation_type = \"registration\" AND used = 0 AND expires_at > datetime(\"now\")'\n    ).bind(challenge, userId).first();\n\n    if (!challengeRecord) {\n      return jsonResponse({\n        error: '\u30C1\u30E3\u30EC\u30F3\u30B8\u304C\u7121\u52B9\u307E\u305F\u306F\u671F\u9650\u5207\u308C\u3067\u3059'\n      }, 400, corsHeaders);\n    }\n\n    // Challenge\u3092\u30DE\u30FC\u30AF\u6E08\u307F\u306B\n    await env.TESTAPP_DB.prepare(\n      'UPDATE webauthn_challenges SET used = 1 WHERE id = ?'\n    ).bind(challengeRecord.id).run();\n\n    // \u30AF\u30E9\u30A4\u30A2\u30F3\u30C8\u691C\u8A3C\n    const clientDataJSON = JSON.parse(\n      new TextDecoder().decode(base64ToArrayBuffer(credential.response.clientDataJSON))\n    );\n\n    if (clientDataJSON.type !== 'webauthn.create') {\n      return jsonResponse({\n        error: '\u7121\u52B9\u306A\u8A8D\u8A3C\u60C5\u5831\u3067\u3059'\n      }, 400, corsHeaders);\n    }\n\n    if (clientDataJSON.challenge !== challenge) {\n      return jsonResponse({\n        error: '\u30C1\u30E3\u30EC\u30F3\u30B8\u304C\u4E00\u81F4\u3057\u307E\u305B\u3093'\n      }, 400, corsHeaders);\n    }\n\n    // WebAuthn\u30AF\u30EC\u30C7\u30F3\u30B7\u30E3\u30EB\u306E\u4FDD\u5B58\n    await env.TESTAPP_DB.prepare(\n      'INSERT INTO webauthn_credentials (user_id, credential_id, public_key, counter, device_type, authenticator_attachment, created_at) VALUES (?, ?, ?, 0, \"platform\", \"platform\", datetime(\"now\"))'\n    ).bind(userId, credential.id, credential.response.attestationObject).run();\n\n    return jsonResponse({\n      success: true,\n      message: '\u30D1\u30B9\u30AD\u30FC\u304C\u767B\u9332\u3055\u308C\u307E\u3057\u305F',\n      credentialId: credential.id\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('\u30D1\u30B9\u30AD\u30FC\u767B\u9332\u5B8C\u4E86\u30A8\u30E9\u30FC:', error);\n    return jsonResponse({\n      error: '\u30D1\u30B9\u30AD\u30FC\u767B\u9332\u5B8C\u4E86\u306B\u5931\u6557\u3057\u307E\u3057\u305F'\n    }, 500, corsHeaders);\n  }\n}\n\n// \u30D1\u30B9\u30AD\u30FC\u30ED\u30B0\u30A4\u30F3\u958B\u59CB\nasync function handlePasskeyLoginBegin(request, env, corsHeaders) {\n  try {\n    // \u30EA\u30AF\u30A8\u30B9\u30C8\u30DC\u30C7\u30A3\u306F\u4E0D\u8981\uFF08\u7A7A\u306EJSON\u3092\u671F\u5F85\uFF09\n\n    // Challenge\u751F\u6210\uFF08\u30E6\u30FC\u30B6\u30FCID\u306A\u3057\u3067\u3082OK\uFF09\n    const challenge = generateChallenge();\n    const expiresAt = new Date(Date.now() + 5 * 60 * 1000).toISOString(); // 5\u5206\n\n    // Challenge\u3092\u4FDD\u5B58\uFF08user_id\u306Fnull\uFF09\n    await env.TESTAPP_DB.prepare(\n      'INSERT INTO webauthn_challenges (challenge, user_id, operation_type, expires_at) VALUES (?, NULL, \"authentication\", ?)'\n    ).bind(challenge, expiresAt).run();\n\n    // \u56FA\u5B9ARPID\u8A2D\u5B9A - \u5E38\u306B\u30E1\u30A4\u30F3\u30C9\u30E1\u30A4\u30F3\u3092\u4F7F\u7528\n    let rpId = 'allfrom0.top';\n\n    const publicKeyCredentialRequestOptions = {\n      challenge: challenge,\n      timeout: 60000,\n      rpId: rpId,\n      userVerification: \"preferred\"\n    };\n\n    return jsonResponse(publicKeyCredentialRequestOptions, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('\u30D1\u30B9\u30AD\u30FC\u8A8D\u8A3C\u958B\u59CB\u30A8\u30E9\u30FC:', error);\n    return jsonResponse({\n      error: '\u30D1\u30B9\u30AD\u30FC\u8A8D\u8A3C\u958B\u59CB\u306B\u5931\u6557\u3057\u307E\u3057\u305F'\n    }, 500, corsHeaders);\n  }\n}\n\n// \u30D1\u30B9\u30AD\u30FC\u30ED\u30B0\u30A4\u30F3\u5B8C\u4E86\nasync function handlePasskeyLoginComplete(request, env, corsHeaders) {\n  try {\n    const { assertion } = await request.json();\n\n    // assertion\u306E\u4E2D\u8EAB\u3092\u5C55\u958B\n    const credential = assertion;\n    const challenge = new TextDecoder().decode(\n      base64ToArrayBuffer(credential.response.clientDataJSON)\n    );\n    const challengeMatch = JSON.parse(challenge).challenge;\n\n    // Challenge\u691C\u8A3C\n    const challengeRecord = await env.TESTAPP_DB.prepare(\n      'SELECT * FROM webauthn_challenges WHERE challenge = ? AND operation_type = \"authentication\" AND used = 0 AND expires_at > datetime(\"now\")'\n    ).bind(challengeMatch).first();\n\n    if (!challengeRecord) {\n      return jsonResponse({\n        error: '\u30C1\u30E3\u30EC\u30F3\u30B8\u304C\u7121\u52B9\u307E\u305F\u306F\u671F\u9650\u5207\u308C\u3067\u3059'\n      }, 400, corsHeaders);\n    }\n\n    // Challenge\u3092\u30DE\u30FC\u30AF\u6E08\u307F\u306B\n    await env.TESTAPP_DB.prepare(\n      'UPDATE webauthn_challenges SET used = 1 WHERE id = ?'\n    ).bind(challengeRecord.id).run();\n\n    // \u30AF\u30EC\u30C7\u30F3\u30B7\u30E3\u30EB\u306E\u53D6\u5F97\n    const storedCredential = await env.TESTAPP_DB.prepare(\n      'SELECT * FROM webauthn_credentials WHERE credential_id = ?'\n    ).bind(credential.id).first();\n\n    if (!storedCredential) {\n      return jsonResponse({\n        error: '\u30AF\u30EC\u30C7\u30F3\u30B7\u30E3\u30EB\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093'\n      }, 404, corsHeaders);\n    }\n\n    // \u30AF\u30E9\u30A4\u30A2\u30F3\u30C8\u691C\u8A3C\uFF08\u57FA\u672C\u691C\u8A3C\uFF09\n    const clientDataJSON = JSON.parse(\n      new TextDecoder().decode(base64ToArrayBuffer(credential.response.clientDataJSON))\n    );\n\n    if (clientDataJSON.type !== 'webauthn.get') {\n      return jsonResponse({\n        error: '\u7121\u52B9\u306A\u8A8D\u8A3C\u60C5\u5831\u3067\u3059'\n      }, 400, corsHeaders);\n    }\n\n    if (clientDataJSON.challenge !== challengeMatch) {\n      return jsonResponse({\n        error: '\u30C1\u30E3\u30EC\u30F3\u30B8\u304C\u4E00\u81F4\u3057\u307E\u305B\u3093'\n      }, 400, corsHeaders);\n    }\n\n    // \u30E6\u30FC\u30B6\u30FC\u60C5\u5831\u3092\u53D6\u5F97\n    const user = await env.TESTAPP_DB.prepare(\n      'SELECT * FROM users WHERE id = ?'\n    ).bind(storedCredential.user_id).first();\n\n    // \u30AF\u30EC\u30C7\u30F3\u30B7\u30E3\u30EB\u4F7F\u7528\u72B6\u6CC1\u3092\u66F4\u65B0\n    await env.TESTAPP_DB.prepare(\n      'UPDATE webauthn_credentials SET last_used = datetime(\"now\"), use_count = use_count + 1 WHERE id = ?'\n    ).bind(storedCredential.id).run();\n\n    // \u30ED\u30B0\u30A4\u30F3\u60C5\u5831\u3092\u66F4\u65B0\n    await env.TESTAPP_DB.prepare(\n      'UPDATE users SET last_login = datetime(\"now\"), login_count = COALESCE(login_count, 0) + 1 WHERE id = ?'\n    ).bind(storedCredential.user_id).run();\n\n    // \u30BB\u30C3\u30B7\u30E7\u30F3\u30C8\u30FC\u30AF\u30F3\u751F\u6210\n    const sessionToken = generateSessionToken();\n    const sessionExpiry = new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(); // 7\u65E5\n\n    await env.TESTAPP_DB.prepare(\n      'INSERT INTO user_sessions (user_id, session_token, expires_at, created_at, data) VALUES (?, ?, ?, ?, ?)'\n    ).bind(\n      storedCredential.user_id,\n      sessionToken,\n      sessionExpiry,\n      new Date().toISOString(),\n      JSON.stringify({\n        userId: storedCredential.user_id,\n        displayName: user.display_name,\n        loginTime: Date.now()\n      })\n    ).run();\n\n    return jsonResponse({\n      success: true,\n      sessionToken: sessionToken,\n      user: {\n        id: storedCredential.user_id,\n        userId: user.username,\n        displayName: user.display_name\n      }\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('\u30D1\u30B9\u30AD\u30FC\u8A8D\u8A3C\u5B8C\u4E86\u30A8\u30E9\u30FC:', error);\n    return jsonResponse({\n      error: '\u30D1\u30B9\u30AD\u30FC\u8A8D\u8A3C\u5B8C\u4E86\u306B\u5931\u6557\u3057\u307E\u3057\u305F'\n    }, 500, corsHeaders);\n  }\n}\n\n// \u30E6\u30FC\u30B6\u30FC\u60C5\u5831\u53D6\u5F97\nasync function handleGetUser(request, env, corsHeaders) {\n  try {\n    const authHeader = request.headers.get('Authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return jsonResponse({ error: '\u8A8D\u8A3C\u30D8\u30C3\u30C0\u30FC\u304C\u5FC5\u8981\u3067\u3059' }, 401, corsHeaders);\n    }\n\n    const token = authHeader.replace('Bearer ', '');\n\n    // \u30BB\u30C3\u30B7\u30E7\u30F3\u78BA\u8A8D\n    const session = await env.TESTAPP_DB.prepare(\n      'SELECT s.*, u.* FROM user_sessions s JOIN users u ON s.user_id = u.id WHERE s.session_token = ? AND s.expires_at > datetime(\"now\")'\n    ).bind(token).first();\n\n    if (!session) {\n      return jsonResponse({ error: '\u30BB\u30C3\u30B7\u30E7\u30F3\u304C\u7121\u52B9\u3067\u3059' }, 401, corsHeaders);\n    }\n\n    const userData = JSON.parse(session.data || '{}');\n\n    return jsonResponse({\n      success: true,\n      user: {\n        id: session.user_id,\n        userId: session.username,\n        displayName: session.display_name,\n        emailVerified: session.email_verified,\n        createdAt: session.created_at,\n        lastLogin: session.last_login,\n        loginCount: session.login_count || 0\n      }\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('\u30E6\u30FC\u30B6\u30FC\u60C5\u5831\u53D6\u5F97\u30A8\u30E9\u30FC:', error);\n    return jsonResponse({\n      error: '\u30E6\u30FC\u30B6\u30FC\u60C5\u5831\u306E\u53D6\u5F97\u306B\u5931\u6557\u3057\u307E\u3057\u305F'\n    }, 500, corsHeaders);\n  }\n}\n\n// === \u9032\u6357\u30C8\u30E9\u30C3\u30AD\u30F3\u30B0\u6A5F\u80FD ===\n\n// \u9032\u6357\u53D6\u5F97\nasync function handleGetProgress(request, env, corsHeaders) {\n  try {\n    const authHeader = request.headers.get('Authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return jsonResponse({ error: '\u8A8D\u8A3C\u30D8\u30C3\u30C0\u30FC\u304C\u5FC5\u8981\u3067\u3059' }, 401, corsHeaders);\n    }\n\n    const token = authHeader.replace('Bearer ', '');\n\n    // \u30BB\u30C3\u30B7\u30E7\u30F3\u304B\u3089\u30E6\u30FC\u30B6\u30FC\u60C5\u5831\u3092\u53D6\u5F97\n    const session = await env.TESTAPP_DB.prepare(\n      'SELECT s.*, u.* FROM user_sessions s JOIN users u ON s.user_id = u.id WHERE s.session_token = ? AND s.expires_at > datetime(\"now\")'\n    ).bind(token).first();\n\n    if (!session) {\n      return jsonResponse({ error: '\u30BB\u30C3\u30B7\u30E7\u30F3\u304C\u7121\u52B9\u3067\u3059' }, 401, corsHeaders);\n    }\n\n    // D1\u304B\u3089\u9032\u6357\u30C7\u30FC\u30BF\u3092\u53D6\u5F97\n    const progress = await env.TESTAPP_DB.prepare(\n      'SELECT * FROM user_progress WHERE user_id = ? ORDER BY updated_at DESC'\n    ).bind(session.user_id).all();\n\n    return jsonResponse({\n      success: true,\n      progress: progress.results || [],\n      user: {\n        id: session.user_id,\n        displayName: session.display_name\n      }\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('\u9032\u6357\u53D6\u5F97\u30A8\u30E9\u30FC:', error);\n    return jsonResponse({\n      error: '\u9032\u6357\u306E\u53D6\u5F97\u306B\u5931\u6557\u3057\u307E\u3057\u305F',\n      details: error.message\n    }, 500, corsHeaders);\n  }\n}\n\n// \u9032\u6357\u4FDD\u5B58\nasync function handleSaveProgress(request, env, corsHeaders) {\n  try {\n    const authHeader = request.headers.get('Authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return jsonResponse({ error: '\u8A8D\u8A3C\u30D8\u30C3\u30C0\u30FC\u304C\u5FC5\u8981\u3067\u3059' }, 401, corsHeaders);\n    }\n\n    const token = authHeader.replace('Bearer ', '');\n\n    // \u30BB\u30C3\u30B7\u30E7\u30F3\u304B\u3089\u30E6\u30FC\u30B6\u30FC\u60C5\u5831\u3092\u53D6\u5F97\n    const session = await env.TESTAPP_DB.prepare(\n      'SELECT s.*, u.* FROM user_sessions s JOIN users u ON s.user_id = u.id WHERE s.session_token = ? AND s.expires_at > datetime(\"now\")'\n    ).bind(token).first();\n\n    if (!session) {\n      return jsonResponse({ error: '\u30BB\u30C3\u30B7\u30E7\u30F3\u304C\u7121\u52B9\u3067\u3059' }, 401, corsHeaders);\n    }\n\n    const { subject, score, totalQuestions, duration } = await request.json();\n\n    if (!subject || score === undefined || !totalQuestions) {\n      return jsonResponse({\n        error: '\u5FC5\u9808\u9805\u76EE\u304C\u5165\u529B\u3055\u308C\u3066\u3044\u307E\u305B\u3093'\n      }, 400, corsHeaders);\n    }\n\n    // \u6B63\u89E3\u7387\u8A08\u7B97\n    const accuracy = Math.round((score / totalQuestions) * 100 * 100) / 100;\n\n    // \u9032\u6357\u3092\u66F4\u65B0\u307E\u305F\u306F\u4F5C\u6210\n    await env.TESTAPP_DB.prepare(`\n      INSERT INTO user_progress (user_id, subject, total_questions, correct_answers, best_score, updated_at)\n      VALUES (?, ?, ?, ?, ?, datetime('now'))\n      ON CONFLICT(user_id, subject) DO UPDATE SET\n        total_questions = total_questions + excluded.total_questions,\n        correct_answers = correct_answers + excluded.correct_answers,\n        best_score = CASE WHEN best_score < excluded.best_score THEN excluded.best_score ELSE best_score END,\n        updated_at = datetime('now')\n    `).bind(session.user_id, subject, totalQuestions, score, score).run();\n\n    // \u5B66\u7FD2\u30BB\u30C3\u30B7\u30E7\u30F3\u3092\u8A18\u9332\n    await env.TESTAPP_DB.prepare(`\n      INSERT INTO study_sessions (user_id, subject, score, total_questions, accuracy, duration_minutes, completed_at)\n      VALUES (?, ?, ?, ?, ?, ?, datetime('now'))\n    `).bind(session.user_id, subject, score, totalQuestions, accuracy, duration || 0).run();\n\n    return jsonResponse({\n      success: true,\n      message: '\u9032\u6357\u3092\u4FDD\u5B58\u3057\u307E\u3057\u305F',\n      accuracy: accuracy\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('\u9032\u6357\u4FDD\u5B58\u30A8\u30E9\u30FC:', error);\n    return jsonResponse({\n      error: '\u9032\u6357\u306E\u4FDD\u5B58\u306B\u5931\u6557\u3057\u307E\u3057\u305F',\n      details: error.message\n    }, 500, corsHeaders);\n  }\n}\n\n// === \u5B66\u7FD2\u5C65\u6B74\u30FB\u5FA9\u7FD2\u6A5F\u80FD\u306E\u30CF\u30F3\u30C9\u30E9\u30FC ===\n\n/**\n * POST /api/study/session/start\n * \u5B66\u7FD2\u30BB\u30C3\u30B7\u30E7\u30F3\u958B\u59CB\n */\nasync function handleStudySessionStart(request, env, corsHeaders) {\n  try {\n    const { userId, subject, level } = await request.json();\n\n    if (!userId || !subject || !level) {\n      return jsonResponse({\n        success: false,\n        error: 'userId, subject, level \u304C\u5FC5\u8981\u3067\u3059'\n      }, 400, corsHeaders);\n    }\n\n    // \u65E2\u5B58\u306E\u30BB\u30C3\u30B7\u30E7\u30F3\u304C\u3042\u308B\u5834\u5408\u306F\u7D42\u4E86\u3055\u305B\u308B\n    await env.TESTAPP_DB.prepare(\n      'UPDATE study_sessions SET ended_at = datetime(\"now\") WHERE user_id = ? AND ended_at IS NULL'\n    ).bind(userId).run();\n\n    // \u65B0\u3057\u3044\u30BB\u30C3\u30B7\u30E7\u30F3\u3092\u4F5C\u6210\n    const result = await env.TESTAPP_DB.prepare(\n      'INSERT INTO study_sessions (user_id, subject, difficulty_level, started_at) VALUES (?, ?, ?, datetime(\"now\"))'\n    ).bind(userId, subject, level).run();\n\n    return jsonResponse({\n      success: true,\n      sessionId: result.meta.last_row_id\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('Study session start error:', error);\n    return jsonResponse({\n      success: false,\n      error: '\u30BB\u30C3\u30B7\u30E7\u30F3\u958B\u59CB\u30A8\u30E9\u30FC'\n    }, 500, corsHeaders);\n  }\n}\n\n/**\n * POST /api/study/session/end\n * \u5B66\u7FD2\u30BB\u30C3\u30B7\u30E7\u30F3\u7D42\u4E86\n */\nasync function handleStudySessionEnd(request, env, corsHeaders) {\n  try {\n    const { sessionId, totalQuestions, correctQuestions, durationSeconds } = await request.json();\n\n    if (!sessionId) {\n      return jsonResponse({\n        success: false,\n        error: 'sessionId \u304C\u5FC5\u8981\u3067\u3059'\n      }, 400, corsHeaders);\n    }\n\n    // \u30BB\u30C3\u30B7\u30E7\u30F3\u3092\u66F4\u65B0\n    await env.TESTAPP_DB.prepare(\n      'UPDATE study_sessions SET ended_at = datetime(\"now\"), total_questions = ?, correct_questions = ?, duration_seconds = ? WHERE id = ?'\n    ).bind(totalQuestions || 0, correctQuestions || 0, durationSeconds || 0, sessionId).run();\n\n    return jsonResponse({\n      success: true\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('Study session end error:', error);\n    return jsonResponse({\n      success: false,\n      error: '\u30BB\u30C3\u30B7\u30E7\u30F3\u7D42\u4E86\u30A8\u30E9\u30FC'\n    }, 500, corsHeaders);\n  }\n}\n\n/**\n * POST /api/study/record\n * \u554F\u984C\u56DE\u7B54\u3092\u8A18\u9332\n */\nasync function handleStudyRecord(request, env, corsHeaders) {\n  try {\n    const {\n      userId,\n      sessionId,\n      subject,\n      level,\n      questionId,\n      questionText,\n      userAnswer,\n      correctAnswer,\n      isCorrect,\n      timeSpentSeconds,\n      explanation\n    } = await request.json();\n\n    if (!userId || !subject || !level) {\n      return jsonResponse({\n        success: false,\n        error: 'userId, subject, level \u304C\u5FC5\u8981\u3067\u3059'\n      }, 400, corsHeaders);\n    }\n\n    // \u56DE\u7B54\u8A18\u9332\u3092\u4FDD\u5B58\n    await env.TESTAPP_DB.prepare(\n      'INSERT INTO study_records (user_id, session_id, subject, difficulty_level, question_id, question_text, user_answer, correct_answer, is_correct, time_spent_seconds) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\n    ).bind(\n      userId,\n      sessionId || null,\n      subject,\n      level,\n      questionId || null,\n      questionText || '',\n      userAnswer || '',\n      correctAnswer || '',\n      isCorrect ? 1 : 0,\n      timeSpentSeconds || null\n    ).run();\n\n    // \u9593\u9055\u3048\u305F\u554F\u984C\u306E\u5834\u5408\u3001wrong_answers\u306B\u8FFD\u52A0\u307E\u305F\u306F\u66F4\u65B0\n    if (!isCorrect) {\n      // \u65E2\u5B58\u306E\u9593\u9055\u3044\u8A18\u9332\u304C\u3042\u308B\u304B\u78BA\u8A8D\n      const existing = await env.TESTAPP_DB.prepare(\n        'SELECT id, wrong_count FROM wrong_answers WHERE user_id = ? AND subject = ? AND difficulty_level = ? AND question_text = ?'\n      ).bind(userId, subject, level, questionText || '').first();\n\n      if (existing) {\n        // \u65E2\u5B58\u306E\u8A18\u9332\u3092\u66F4\u65B0\n        await env.TESTAPP_DB.prepare(\n          'UPDATE wrong_answers SET wrong_count = wrong_count + 1, last_wrong_at = datetime(\"now\"), user_answer = ?, mastered = 0 WHERE id = ?'\n        ).bind(userAnswer || '', existing.id).run();\n      } else {\n        // \u65B0\u898F\u8FFD\u52A0\n        await env.TESTAPP_DB.prepare(\n          'INSERT INTO wrong_answers (user_id, subject, difficulty_level, question_id, question_text, user_answer, correct_answer, explanation) VALUES (?, ?, ?, ?, ?, ?, ?, ?)'\n        ).bind(\n          userId,\n          subject,\n          level,\n          questionId || null,\n          questionText || '',\n          userAnswer || '',\n          correctAnswer || '',\n          explanation || null\n        ).run();\n      }\n    }\n\n    // \u7D71\u8A08\u3092\u66F4\u65B0\n    const stats = await env.TESTAPP_DB.prepare(\n      'SELECT * FROM study_stats WHERE user_id = ? AND subject = ? AND difficulty_level = ?'\n    ).bind(userId, subject, level).first();\n\n    if (stats) {\n      await env.TESTAPP_DB.prepare(\n        'UPDATE study_stats SET total_questions = total_questions + 1, correct_questions = correct_questions + ?, last_studied_at = datetime(\"now\"), updated_at = datetime(\"now\") WHERE id = ?'\n      ).bind(isCorrect ? 1 : 0, stats.id).run();\n    } else {\n      await env.TESTAPP_DB.prepare(\n        'INSERT INTO study_stats (user_id, subject, difficulty_level, total_questions, correct_questions, last_studied_at) VALUES (?, ?, ?, 1, ?, datetime(\"now\"))'\n      ).bind(userId, subject, level, isCorrect ? 1 : 0).run();\n    }\n\n    return jsonResponse({\n      success: true\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('Study record error:', error);\n    return jsonResponse({\n      success: false,\n      error: '\u8A18\u9332\u4FDD\u5B58\u30A8\u30E9\u30FC'\n    }, 500, corsHeaders);\n  }\n}\n\n/**\n * GET /api/study/history?userId=123\n * \u5B66\u7FD2\u5C65\u6B74\u3092\u53D6\u5F97\n */\nasync function handleGetStudyHistory(request, env, corsHeaders) {\n  try {\n    const url = new URL(request.url);\n    const userId = url.searchParams.get('userId');\n    const limit = url.searchParams.get('limit') || '50';\n\n    if (!userId) {\n      return jsonResponse({\n        success: false,\n        error: 'userId \u304C\u5FC5\u8981\u3067\u3059'\n      }, 400, corsHeaders);\n    }\n\n    // \u6700\u8FD1\u306E\u5B66\u7FD2\u30BB\u30C3\u30B7\u30E7\u30F3\u3092\u53D6\u5F97\n    const sessions = await env.TESTAPP_DB.prepare(\n      'SELECT * FROM study_sessions WHERE user_id = ? ORDER BY started_at DESC LIMIT ?'\n    ).bind(userId, parseInt(limit)).all();\n\n    return jsonResponse({\n      success: true,\n      sessions: sessions.results || []\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('Get study history error:', error);\n    return jsonResponse({\n      success: false,\n      error: '\u5C65\u6B74\u53D6\u5F97\u30A8\u30E9\u30FC'\n    }, 500, corsHeaders);\n  }\n}\n\n/**\n * GET /api/study/stats?userId=123\n * \u5B66\u7FD2\u7D71\u8A08\u3092\u53D6\u5F97\n */\nasync function handleGetStudyStats(request, env, corsHeaders) {\n  try {\n    const url = new URL(request.url);\n    const userId = url.searchParams.get('userId');\n\n    if (!userId) {\n      return jsonResponse({\n        success: false,\n        error: 'userId \u304C\u5FC5\u8981\u3067\u3059'\n      }, 400, corsHeaders);\n    }\n\n    // \u7D71\u8A08\u3092\u53D6\u5F97\n    const stats = await env.TESTAPP_DB.prepare(\n      'SELECT * FROM study_stats WHERE user_id = ? ORDER BY last_studied_at DESC'\n    ).bind(userId).all();\n\n    // \u7DCF\u5B66\u7FD2\u6642\u9593\u3092\u8A08\u7B97\n    const totalTime = await env.TESTAPP_DB.prepare(\n      'SELECT SUM(duration_seconds) as total FROM study_sessions WHERE user_id = ?'\n    ).bind(userId).first();\n\n    // \u6700\u8FD17\u65E5\u9593\u306E\u30A2\u30AF\u30C6\u30A3\u30D3\u30C6\u30A3\n    const recentActivity = await env.TESTAPP_DB.prepare(\n      'SELECT DATE(started_at) as date, COUNT(*) as sessions, SUM(total_questions) as questions FROM study_sessions WHERE user_id = ? AND started_at >= datetime(\"now\", \"-7 days\") GROUP BY DATE(started_at) ORDER BY date DESC'\n    ).bind(userId).all();\n\n    return jsonResponse({\n      success: true,\n      stats: stats.results || [],\n      totalStudySeconds: totalTime?.total || 0,\n      recentActivity: recentActivity.results || []\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('Get study stats error:', error);\n    return jsonResponse({\n      success: false,\n      error: '\u7D71\u8A08\u53D6\u5F97\u30A8\u30E9\u30FC'\n    }, 500, corsHeaders);\n  }\n}\n\n/**\n * GET /api/study/wrong-answers?userId=123&subject=math&level=math_1a\n * \u9593\u9055\u3048\u305F\u554F\u984C\u3092\u53D6\u5F97\uFF08\u5FA9\u7FD2\u7528\uFF09\n */\nasync function handleGetWrongAnswers(request, env, corsHeaders) {\n  try {\n    const url = new URL(request.url);\n    const userId = url.searchParams.get('userId');\n    const subject = url.searchParams.get('subject');\n    const level = url.searchParams.get('level');\n    const masteredOnly = url.searchParams.get('mastered') === 'false' ? false : null;\n\n    if (!userId) {\n      return jsonResponse({\n        success: false,\n        error: 'userId \u304C\u5FC5\u8981\u3067\u3059'\n      }, 400, corsHeaders);\n    }\n\n    let query = 'SELECT * FROM wrong_answers WHERE user_id = ?';\n    const params = [userId];\n\n    if (subject) {\n      query += ' AND subject = ?';\n      params.push(subject);\n    }\n\n    if (level) {\n      query += ' AND difficulty_level = ?';\n      params.push(level);\n    }\n\n    if (masteredOnly === false) {\n      query += ' AND mastered = 0';\n    }\n\n    query += ' ORDER BY last_wrong_at DESC';\n\n    const wrongAnswers = await env.TESTAPP_DB.prepare(query).bind(...params).all();\n\n    return jsonResponse({\n      success: true,\n      wrongAnswers: wrongAnswers.results || []\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('Get wrong answers error:', error);\n    return jsonResponse({\n      success: false,\n      error: '\u9593\u9055\u3048\u305F\u554F\u984C\u53D6\u5F97\u30A8\u30E9\u30FC'\n    }, 500, corsHeaders);\n  }\n}\n\n/**\n * POST /api/study/wrong-answers/master\n * \u554F\u984C\u3092\u300C\u7FD2\u5F97\u6E08\u307F\u300D\u306B\u30DE\u30FC\u30AF\n */\nasync function handleMarkAsMastered(request, env, corsHeaders) {\n  try {\n    const { wrongAnswerId } = await request.json();\n\n    if (!wrongAnswerId) {\n      return jsonResponse({\n        success: false,\n        error: 'wrongAnswerId \u304C\u5FC5\u8981\u3067\u3059'\n      }, 400, corsHeaders);\n    }\n\n    await env.TESTAPP_DB.prepare(\n      'UPDATE wrong_answers SET mastered = 1, reviewed_at = datetime(\"now\") WHERE id = ?'\n    ).bind(wrongAnswerId).run();\n\n    return jsonResponse({\n      success: true\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('Mark as mastered error:', error);\n    return jsonResponse({\n      success: false,\n      error: '\u7FD2\u5F97\u30DE\u30FC\u30AF\u30A8\u30E9\u30FC'\n    }, 500, corsHeaders);\n  }\n}\n\n// === \u5F8C\u65B9\u4E92\u63DB\u6027\u306E\u305F\u3081\u306E\u95A2\u6570 ===\n\n// \u5F93\u6765\u578B\u30E6\u30FC\u30B6\u30FC\u30ED\u30B0\u30A4\u30F3\nasync function loginUserLegacy(request, env, corsHeaders) {\n  try {\n    const { username, password } = await request.json();\n\n    if (!username || !password) {\n      return jsonResponse({ error: '\u30E6\u30FC\u30B6\u30FC\u540D\u3068\u30D1\u30B9\u30EF\u30FC\u30C9\u304C\u5FC5\u8981\u3067\u3059' }, 400, corsHeaders);\n    }\n\n    // \u30E6\u30FC\u30B6\u30FC\u691C\u7D22\uFF08is_active\u30AB\u30E9\u30E0\u3092\u53C2\u7167\u3057\u306A\u3044\uFF09\n    const user = await env.TESTAPP_DB.prepare(\n      'SELECT * FROM users WHERE username = ?'\n    ).bind(username).first();\n\n    if (!user) {\n      return jsonResponse({ error: '\u30E6\u30FC\u30B6\u30FC\u540D\u307E\u305F\u306F\u30D1\u30B9\u30EF\u30FC\u30C9\u304C\u9593\u9055\u3063\u3066\u3044\u307E\u3059' }, 401, corsHeaders);\n    }\n\n    // \u7C21\u6613\u30D1\u30B9\u30EF\u30FC\u30C9\u691C\u8A3C\uFF08\u5B9F\u969B\u306E\u5B9F\u88C5\u3067\u306F\u9069\u5207\u306A\u30CF\u30C3\u30B7\u30E5\u5316\u304C\u5FC5\u8981\uFF09\n    if (password !== 'admin123') {\n      return jsonResponse({ error: '\u30E6\u30FC\u30B6\u30FC\u540D\u307E\u305F\u306F\u30D1\u30B9\u30EF\u30FC\u30C9\u304C\u9593\u9055\u3063\u3066\u3044\u307E\u3059' }, 401, corsHeaders);\n    }\n\n    // JWT\u751F\u6210\n    const payload = {\n      userId: user.id,\n      username: user.username,\n      exp: Math.floor(Date.now() / 1000) + (24 * 60 * 60) // 24\u6642\u9593\n    };\n\n    const token = await sign(payload, env.JWT_SECRET);\n\n    // \u30BB\u30C3\u30B7\u30E7\u30F3\u4FDD\u5B58\n    await env.TESTAPP_DB.prepare(\n      'INSERT INTO user_sessions (user_id, session_token, expires_at, created_at) VALUES (?, ?, datetime(\"now\", \"+24 hours\"), ?)'\n    ).bind(user.id, token, new Date().toISOString()).run();\n\n    return jsonResponse({\n      success: true,\n      token: token,\n      user: {\n        id: user.id,\n        username: user.username,\n        email: user.email,\n        display_name: user.display_name\n      }\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('\u30ED\u30B0\u30A4\u30F3\u30A8\u30E9\u30FC:', error);\n    return jsonResponse({\n      error: '\u30ED\u30B0\u30A4\u30F3\u306B\u5931\u6557\u3057\u307E\u3057\u305F',\n      details: error.message\n    }, 500, corsHeaders);\n  }\n}\n\n// \u5F93\u6765\u578B\u30E6\u30FC\u30B6\u30FC\u767B\u9332\nasync function registerUserLegacy(request, env, corsHeaders) {\n  try {\n    const { username, email, password, displayName } = await request.json();\n\n    if (!username || !email || !password) {\n      return jsonResponse({ error: '\u5FC5\u9808\u9805\u76EE\u304C\u5165\u529B\u3055\u308C\u3066\u3044\u307E\u305B\u3093' }, 400, corsHeaders);\n    }\n\n    // \u91CD\u8907\u30C1\u30A7\u30C3\u30AF\n    const existingUser = await env.TESTAPP_DB.prepare(\n      'SELECT id FROM users WHERE username = ? OR email = ?'\n    ).bind(username, email).first();\n\n    if (existingUser) {\n      return jsonResponse({ error: '\u30E6\u30FC\u30B6\u30FC\u540D\u307E\u305F\u306F\u30E1\u30FC\u30EB\u30A2\u30C9\u30EC\u30B9\u304C\u65E2\u306B\u4F7F\u7528\u3055\u308C\u3066\u3044\u307E\u3059' }, 409, corsHeaders);\n    }\n\n    // \u30E6\u30FC\u30B6\u30FC\u4F5C\u6210\n    const result = await env.TESTAPP_DB.prepare(\n      'INSERT INTO users (username, email, password_hash, display_name, created_at) VALUES (?, ?, ?, ?, datetime(\"now\"))'\n    ).bind(username, email, password, displayName || username).run();\n\n    return jsonResponse({\n      success: true,\n      message: '\u30E6\u30FC\u30B6\u30FC\u767B\u9332\u304C\u5B8C\u4E86\u3057\u307E\u3057\u305F',\n      userId: result.meta.last_row_id\n    }, 201, corsHeaders);\n\n  } catch (error) {\n    console.error('\u30E6\u30FC\u30B6\u30FC\u767B\u9332\u30A8\u30E9\u30FC:', error);\n    return jsonResponse({\n      error: '\u30E6\u30FC\u30B6\u30FC\u767B\u9332\u306B\u5931\u6557\u3057\u307E\u3057\u305F',\n      details: error.message\n    }, 500, corsHeaders);\n  }\n}\n\n// === \u65E2\u5B58\u306E\u95A2\u6570\uFF08\u5F8C\u65B9\u4E92\u63DB\u6027\u306E\u305F\u3081\uFF09 ===\n\n// \u30E6\u30FC\u30B6\u30FC\u8A8D\u8A3C\nasync function authenticateUser(request, env) {\n  const authHeader = request.headers.get('Authorization');\n\n  if (!authHeader || !authHeader.startsWith('Bearer ')) {\n    return { success: false, error: '\u8A8D\u8A3C\u30D8\u30C3\u30C0\u30FC\u304C\u5FC5\u8981\u3067\u3059', status: 401 };\n  }\n\n  const token = authHeader.replace('Bearer ', '');\n\n  try {\n    // JWT\u691C\u8A3C\n    const isValid = await verify(token, env.JWT_SECRET);\n    if (!isValid) {\n      return { success: false, error: '\u30C8\u30FC\u30AF\u30F3\u304C\u7121\u52B9\u3067\u3059', status: 401 };\n    }\n\n    const payload = JSON.parse(atob(token.split('.')[1]));\n\n    // \u30BB\u30C3\u30B7\u30E7\u30F3\u78BA\u8A8D\n    const session = await env.TESTAPP_DB.prepare(\n      'SELECT s.*, u.* FROM user_sessions s JOIN users u ON s.user_id = u.id WHERE s.session_token = ? AND s.expires_at > datetime(\"now\")'\n    ).bind(token).first();\n\n    if (!session) {\n      return { success: false, error: '\u30BB\u30C3\u30B7\u30E7\u30F3\u304C\u7121\u52B9\u3067\u3059', status: 401 };\n    }\n\n    return {\n      success: true,\n      user: {\n        id: session.user_id,\n        username: session.username,\n        email: session.email,\n        display_name: session.display_name,\n        is_admin: session.is_admin || 0\n      }\n    };\n  } catch (error) {\n    return { success: false, error: '\u8A8D\u8A3C\u30A8\u30E9\u30FC', status: 401 };\n  }\n}\n\n// \u4EE5\u4E0B\u3001\u65E2\u5B58\u306E\u95A2\u6570\u3092\u305D\u306E\u307E\u307E\u5229\u7528...\n\n// \u30E6\u30FC\u30B6\u30FC\u30D7\u30ED\u30D5\u30A3\u30FC\u30EB\u53D6\u5F97\nasync function getUserProfile(user, corsHeaders) {\n  return jsonResponse({\n    user: user\n  }, 200, corsHeaders);\n}\n\n// \u79D1\u76EE\u4E00\u89A7\u53D6\u5F97\nasync function getSubjects(env, corsHeaders) {\n  try {\n    const subjects = await env.TESTAPP_DB.prepare(\n      'SELECT * FROM subjects WHERE is_active = TRUE ORDER BY id'\n    ).all();\n\n    return jsonResponse({\n      subjects: subjects.results\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('\u79D1\u76EE\u4E00\u89A7\u53D6\u5F97\u30A8\u30E9\u30FC:', error);\n    return jsonResponse({\n      error: '\u79D1\u76EE\u4E00\u89A7\u306E\u53D6\u5F97\u306B\u5931\u6557\u3057\u307E\u3057\u305F',\n      details: error.message\n    }, 500, corsHeaders);\n  }\n}\n\n// \u5B66\u7FD2\u30CE\u30FC\u30C8\u554F\u984C\u53D6\u5F97\nasync function getNoteQuestions(request, env, corsHeaders) {\n  try {\n    const url = new URL(request.url);\n    const subject = url.searchParams.get('subject');\n    const limit = parseInt(url.searchParams.get('limit')) || 100;\n    const offset = parseInt(url.searchParams.get('offset')) || 0;\n    const level = url.searchParams.get('level');\n\n    let query = 'SELECT * FROM note_questions WHERE is_deleted = 0';\n    const params = [];\n\n    if (subject) {\n      query += ' AND subject = ?';\n      params.push(subject);\n    }\n\n    if (level) {\n      query += ' AND difficulty_level = ?';\n      params.push(level);\n    }\n\n    query += ' ORDER BY created_at DESC LIMIT ? OFFSET ?';\n    params.push(limit, offset);\n\n    const result = await env.TESTAPP_DB.prepare(query).bind(...params).all();\n\n    // JSON\u30D5\u30A3\u30FC\u30EB\u30C9\u3092\u30D1\u30FC\u30B9\n    const questions = result.results.map(q => ({\n      ...q,\n      choices: q.choices ? JSON.parse(q.choices) : null,\n      media_urls: q.media_urls ? JSON.parse(q.media_urls) : null,\n      tags: q.tags ? JSON.parse(q.tags) : null\n    }));\n\n    return jsonResponse({\n      success: true,\n      questions: questions,\n      total: questions.length\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('\u554F\u984C\u53D6\u5F97\u30A8\u30E9\u30FC:', error);\n    return jsonResponse({\n      error: '\u554F\u984C\u306E\u53D6\u5F97\u306B\u5931\u6557\u3057\u307E\u3057\u305F',\n      details: error.message\n    }, 500, corsHeaders);\n  }\n}\n\n// \u5B66\u7FD2\u30CE\u30FC\u30C8\u554F\u984C\u4F5C\u6210\nasync function createNoteQuestion(request, env, corsHeaders) {\n  try {\n    const data = await request.json();\n\n    const result = await env.TESTAPP_DB.prepare(`\n      INSERT INTO note_questions (\n        id, subject, title, question_text, correct_answer, source,\n        word, is_listening, difficulty_level, mode, choices, media_urls,\n        explanation, tags, created_at, updated_at\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n    `).bind(\n      data.id,\n      data.subject,\n      data.title || '',\n      data.question_text,\n      data.correct_answer,\n      data.source || 'learning-notebook',\n      data.word || null,\n      data.is_listening ? 1 : 0,\n      data.difficulty_level || 'medium',\n      data.mode || null,\n      data.choices ? JSON.stringify(data.choices) : null,\n      data.media_urls ? JSON.stringify(data.media_urls) : null,\n      data.explanation || null,\n      data.tags ? JSON.stringify(data.tags) : null,\n      data.created_at || new Date().toISOString(),\n      new Date().toISOString()\n    ).run();\n\n    return jsonResponse({\n      success: true,\n      message: '\u554F\u984C\u3092\u4F5C\u6210\u3057\u307E\u3057\u305F',\n      questionId: data.id\n    }, 201, corsHeaders);\n\n  } catch (error) {\n    console.error('\u554F\u984C\u4F5C\u6210\u30A8\u30E9\u30FC:', error);\n    return jsonResponse({\n      error: '\u554F\u984C\u306E\u4F5C\u6210\u306B\u5931\u6557\u3057\u307E\u3057\u305F',\n      details: error.message\n    }, 500, corsHeaders);\n  }\n}\n\n// \u5B66\u7FD2\u30CE\u30FC\u30C8\u554F\u984C\u66F4\u65B0\nasync function updateNoteQuestion(questionId, request, env, corsHeaders) {\n  try {\n    const data = await request.json();\n\n    const updateFields = [];\n    const params = [];\n\n    if (data.title !== undefined) {\n      updateFields.push('title = ?');\n      params.push(data.title);\n    }\n    if (data.question_text !== undefined) {\n      updateFields.push('question_text = ?');\n      params.push(data.question_text);\n    }\n    if (data.correct_answer !== undefined) {\n      updateFields.push('correct_answer = ?');\n      params.push(data.correct_answer);\n    }\n    if (data.difficulty_level !== undefined) {\n      updateFields.push('difficulty_level = ?');\n      params.push(data.difficulty_level);\n    }\n    if (data.explanation !== undefined) {\n      updateFields.push('explanation = ?');\n      params.push(data.explanation);\n    }\n    if (data.choices !== undefined) {\n      updateFields.push('choices = ?');\n      params.push(JSON.stringify(data.choices));\n    }\n    if (data.media_urls !== undefined) {\n      updateFields.push('media_urls = ?');\n      params.push(JSON.stringify(data.media_urls));\n    }\n    if (data.word !== undefined) {\n      updateFields.push('word = ?');\n      params.push(data.word);\n    }\n    if (data.is_listening !== undefined) {\n      updateFields.push('is_listening = ?');\n      params.push(data.is_listening ? 1 : 0);\n    }\n\n    updateFields.push('updated_at = ?');\n    params.push(new Date().toISOString());\n\n    params.push(questionId);\n\n    const query = `UPDATE note_questions SET ${updateFields.join(', ')} WHERE id = ?`;\n    await env.TESTAPP_DB.prepare(query).bind(...params).run();\n\n    return jsonResponse({\n      success: true,\n      message: '\u554F\u984C\u3092\u66F4\u65B0\u3057\u307E\u3057\u305F'\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('\u554F\u984C\u66F4\u65B0\u30A8\u30E9\u30FC:', error);\n    return jsonResponse({\n      error: '\u554F\u984C\u306E\u66F4\u65B0\u306B\u5931\u6557\u3057\u307E\u3057\u305F',\n      details: error.message\n    }, 500, corsHeaders);\n  }\n}\n\n// \u5B66\u7FD2\u30CE\u30FC\u30C8\u554F\u984C\u524A\u9664\uFF08\u30BD\u30D5\u30C8\u30C7\u30EA\u30FC\u30C8\uFF09\nasync function deleteNoteQuestion(questionId, env, corsHeaders) {\n  try {\n    await env.TESTAPP_DB.prepare(\n      'UPDATE note_questions SET is_deleted = 1, updated_at = ? WHERE id = ?'\n    ).bind(new Date().toISOString(), questionId).run();\n\n    return jsonResponse({\n      success: true,\n      message: '\u554F\u984C\u3092\u524A\u9664\u3057\u307E\u3057\u305F'\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('\u554F\u984C\u524A\u9664\u30A8\u30E9\u30FC:', error);\n    return jsonResponse({\n      error: '\u554F\u984C\u306E\u524A\u9664\u306B\u5931\u6557\u3057\u307E\u3057\u305F',\n      details: error.message\n    }, 500, corsHeaders);\n  }\n}\n\n// \u30D1\u30C3\u30BB\u30FC\u30B8\u5358\u4F4D\u3067\u306E\u554F\u984C\u53D6\u5F97\uFF08\u6771\u5927\u30EA\u30B9\u30CB\u30F3\u30B0\u5F62\u5F0F\uFF09\nasync function getPassages(request, env, corsHeaders) {\n  try {\n    const url = new URL(request.url);\n    const subject = url.searchParams.get('subject');\n    const passageId = url.searchParams.get('passageId');\n    const limit = parseInt(url.searchParams.get('limit')) || 100;\n\n    if (passageId) {\n      // \u7279\u5B9A\u306E\u30D1\u30C3\u30BB\u30FC\u30B8\u306E\u5168\u8A2D\u554F\u3092\u53D6\u5F97\n      const result = await env.TESTAPP_DB.prepare(\n        'SELECT * FROM note_questions WHERE passage_id = ? AND is_deleted = 0 ORDER BY question_order ASC'\n      ).bind(passageId).all();\n\n      const questions = result.results.map(q => ({\n        ...q,\n        choices: q.choices ? JSON.parse(q.choices) : null,\n        media_urls: q.media_urls ? JSON.parse(q.media_urls) : null,\n        tags: q.tags ? JSON.parse(q.tags) : null\n      }));\n\n      return jsonResponse({\n        success: true,\n        passage_id: passageId,\n        questions: questions,\n        total: questions.length\n      }, 200, corsHeaders);\n    }\n\n    // \u30D1\u30C3\u30BB\u30FC\u30B8\u4E00\u89A7\u3092\u53D6\u5F97\uFF08\u5404\u30D1\u30C3\u30BB\u30FC\u30B8\u306E\u6700\u521D\u306E\u554F\u984C\u306E\u307F\uFF09\n    let query = `\n      SELECT DISTINCT passage_id, subject, title, media_urls, difficulty_level, created_at\n      FROM note_questions\n      WHERE is_deleted = 0 AND passage_id IS NOT NULL\n    `;\n    const params = [];\n\n    if (subject) {\n      query += ' AND subject = ?';\n      params.push(subject);\n    }\n\n    query += ' GROUP BY passage_id ORDER BY created_at DESC LIMIT ?';\n    params.push(limit);\n\n    const result = await env.TESTAPP_DB.prepare(query).bind(...params).all();\n\n    const passages = await Promise.all(\n      result.results.map(async (passage) => {\n        // \u5404\u30D1\u30C3\u30BB\u30FC\u30B8\u306E\u554F\u984C\u6570\u3092\u53D6\u5F97\n        const countResult = await env.TESTAPP_DB.prepare(\n          'SELECT COUNT(*) as count FROM note_questions WHERE passage_id = ? AND is_deleted = 0'\n        ).bind(passage.passage_id).first();\n\n        return {\n          passage_id: passage.passage_id,\n          subject: passage.subject,\n          title: passage.title,\n          media_urls: passage.media_urls ? JSON.parse(passage.media_urls) : null,\n          difficulty_level: passage.difficulty_level,\n          question_count: countResult.count,\n          created_at: passage.created_at\n        };\n      })\n    );\n\n    return jsonResponse({\n      success: true,\n      passages: passages,\n      total: passages.length\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('\u30D1\u30C3\u30BB\u30FC\u30B8\u53D6\u5F97\u30A8\u30E9\u30FC:', error);\n    return jsonResponse({\n      error: '\u30D1\u30C3\u30BB\u30FC\u30B8\u306E\u53D6\u5F97\u306B\u5931\u6557\u3057\u307E\u3057\u305F',\n      details: error.message\n    }, 500, corsHeaders);\n  }\n}\n\n// \u30D1\u30C3\u30BB\u30FC\u30B8\u4F5C\u6210\uFF08\u8907\u6570\u554F\u984C\u3092\u307E\u3068\u3081\u3066\u767B\u9332\uFF09\nasync function createPassage(request, env, corsHeaders) {\n  try {\n    const data = await request.json();\n\n    if (!data.passage_id || !data.questions || !Array.isArray(data.questions) || data.questions.length === 0) {\n      return jsonResponse({\n        error: 'passage_id\u3068\u554F\u984C\u914D\u5217\u304C\u5FC5\u8981\u3067\u3059'\n      }, 400, corsHeaders);\n    }\n\n    // \u5404\u554F\u984C\u3092\u767B\u9332\n    for (let i = 0; i < data.questions.length; i++) {\n      const question = data.questions[i];\n\n      // \u6700\u521D\u306E\u554F\u984C\u306B\u306E\u307F\u30D1\u30C3\u30BB\u30FC\u30B8\u5168\u4F53\u306E\u60C5\u5831\u3092\u4FDD\u5B58\n      const passageScript = (i === 0 && data.script) ? data.script : null;\n      const passageExplanation = (i === 0 && data.overall_explanation) ? data.overall_explanation : null;\n\n      await env.TESTAPP_DB.prepare(`\n        INSERT INTO note_questions (\n          id, subject, title, question_text, correct_answer, source,\n          word, is_listening, difficulty_level, mode, choices, media_urls,\n          explanation, tags, passage_id, question_order, passage_script, passage_explanation,\n          created_at, updated_at\n        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n      `).bind(\n        question.id || `${data.passage_id}_q${i + 1}`,\n        data.subject || 'english-listening',\n        data.title || '',\n        question.question_text,\n        question.correct_answer,\n        data.source || 'learning-notebook',\n        question.word || null,\n        1, // is_listening = true\n        data.difficulty_level || 'listen_todai',\n        'multiple_choice',\n        question.choices ? JSON.stringify(question.choices) : null,\n        data.media_urls ? JSON.stringify(data.media_urls) : null,\n        question.explanation || null,\n        question.tags ? JSON.stringify(question.tags) : null,\n        data.passage_id,\n        i + 1, // question_order\n        passageScript,\n        passageExplanation,\n        new Date().toISOString(),\n        new Date().toISOString()\n      ).run();\n    }\n\n    return jsonResponse({\n      success: true,\n      message: '\u30D1\u30C3\u30BB\u30FC\u30B8\u3092\u4F5C\u6210\u3057\u307E\u3057\u305F',\n      passage_id: data.passage_id,\n      question_count: data.questions.length\n    }, 201, corsHeaders);\n\n  } catch (error) {\n    console.error('\u30D1\u30C3\u30BB\u30FC\u30B8\u4F5C\u6210\u30A8\u30E9\u30FC:', error);\n    return jsonResponse({\n      error: '\u30D1\u30C3\u30BB\u30FC\u30B8\u306E\u4F5C\u6210\u306B\u5931\u6557\u3057\u307E\u3057\u305F',\n      details: error.message\n    }, 500, corsHeaders);\n  }\n}\n\n// \u97F3\u58F0\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\uFF08\u8A8D\u8A3C\u4E0D\u8981\u30FB\u7C21\u6613\u7248\uFF09\nasync function uploadAudioSimple(request, env, corsHeaders) {\n  try {\n    const formData = await request.formData();\n    const file = formData.get('file');\n    const subject = formData.get('subject') || 'general';\n\n    if (!file) {\n      return jsonResponse({ error: '\u30D5\u30A1\u30A4\u30EB\u304C\u9078\u629E\u3055\u308C\u3066\u3044\u307E\u305B\u3093' }, 400, corsHeaders);\n    }\n\n    // \u30D5\u30A1\u30A4\u30EB\u540D\u751F\u6210\n    const timestamp = Date.now();\n    const randomId = Math.random().toString(36).substring(2, 10);\n    const extension = file.name.split('.').pop();\n    const filename = `assets/audio/${subject}/${timestamp}_${randomId}.${extension}`;\n\n    // R2\u306B\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\n    await env.QUESTA_BUCKET.put(filename, file.stream(), {\n      httpMetadata: {\n        contentType: file.type,\n      },\n      customMetadata: {\n        'original-name': file.name,\n        'subject': subject,\n        'timestamp': timestamp.toString()\n      }\n    });\n\n    const publicUrl = `https://pub-3e45f268c1214f3cb9503d996a985f3c.r2.dev/${filename}`;\n\n    return jsonResponse({\n      success: true,\n      url: publicUrl,\n      filename: filename,\n      originalName: file.name,\n      size: file.size,\n      uploadedAt: new Date(timestamp).toISOString()\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('\u97F3\u58F0\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u30A8\u30E9\u30FC:', error);\n    return jsonResponse({\n      error: '\u30D5\u30A1\u30A4\u30EB\u306E\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u306B\u5931\u6557\u3057\u307E\u3057\u305F',\n      details: error.message\n    }, 500, corsHeaders);\n  }\n}\n\n// \u65E2\u5B58\u306E\u554F\u984C\u95A2\u9023\u95A2\u6570\u3092\u305D\u306E\u307E\u307E\u5229\u7528...\nasync function saveQuestions(request, env, user, subjectCode, corsHeaders) {\n  try {\n    const { questions, title } = await request.json();\n\n    if (!questions || !Array.isArray(questions)) {\n      return jsonResponse({ error: '\u7121\u52B9\u306A\u554F\u984C\u30C7\u30FC\u30BF\u3067\u3059' }, 400, corsHeaders);\n    }\n\n    const subject = await env.TESTAPP_DB.prepare(\n      'SELECT id FROM subjects WHERE code = ? AND is_active = TRUE'\n    ).bind(subjectCode).first();\n\n    if (!subject) {\n      return jsonResponse({ error: '\u79D1\u76EE\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093' }, 404, corsHeaders);\n    }\n\n    const questionSetResult = await env.TESTAPP_DB.prepare(\n      'INSERT INTO question_sets (subject_id, title, created_by) VALUES (?, ?, ?)'\n    ).bind(subject.id, title || `${subjectCode}\u554F\u984C\u30BB\u30C3\u30C8`, user.id).run();\n\n    const questionSetId = questionSetResult.meta.last_row_id;\n\n    for (let i = 0; i < questions.length; i++) {\n      const question = questions[i];\n      await env.TESTAPP_DB.prepare(\n        'INSERT INTO questions (question_set_id, question_text, question_data, correct_answer, explanation, order_index) VALUES (?, ?, ?, ?, ?, ?)'\n      ).bind(\n        questionSetId,\n        question.question || question.text || '',\n        JSON.stringify(question),\n        question.answer || '',\n        question.explanation || '',\n        i\n      ).run();\n    }\n\n    return jsonResponse({\n      success: true,\n      questionSetId: questionSetId,\n      count: questions.length,\n      timestamp: new Date().toISOString()\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('\u554F\u984C\u4FDD\u5B58\u30A8\u30E9\u30FC:', error);\n    return jsonResponse({\n      error: '\u554F\u984C\u306E\u4FDD\u5B58\u306B\u5931\u6557\u3057\u307E\u3057\u305F',\n      details: error.message\n    }, 500, corsHeaders);\n  }\n}\n\nasync function loadQuestions(env, subjectCode, corsHeaders) {\n  try {\n    const subject = await env.TESTAPP_DB.prepare(\n      'SELECT id FROM subjects WHERE code = ? AND is_active = TRUE'\n    ).bind(subjectCode).first();\n\n    if (!subject) {\n      return jsonResponse({\n        questions: [],\n        metadata: null,\n        message: `${subjectCode}\u306E\u554F\u984C\u30C7\u30FC\u30BF\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093`\n      }, 200, corsHeaders);\n    }\n\n    const questionSet = await env.TESTAPP_DB.prepare(\n      'SELECT * FROM question_sets WHERE subject_id = ? AND is_active = TRUE ORDER BY created_at DESC LIMIT 1'\n    ).bind(subject.id).first();\n\n    if (!questionSet) {\n      return jsonResponse({\n        questions: [],\n        metadata: null,\n        message: `${subjectCode}\u306E\u554F\u984C\u30C7\u30FC\u30BF\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093`\n      }, 200, corsHeaders);\n    }\n\n    const questions = await env.TESTAPP_DB.prepare(\n      'SELECT * FROM questions WHERE question_set_id = ? ORDER BY order_index'\n    ).bind(questionSet.id).all();\n\n    return jsonResponse({\n      questions: questions.results.map(q => ({\n        ...JSON.parse(q.question_data || '{}'),\n        id: q.id\n      })),\n      metadata: {\n        setId: questionSet.id,\n        title: questionSet.title,\n        created_at: questionSet.created_at,\n        count: questions.results.length\n      }\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('\u554F\u984C\u53D6\u5F97\u30A8\u30E9\u30FC:', error);\n    return jsonResponse({\n      error: '\u554F\u984C\u306E\u53D6\u5F97\u306B\u5931\u6557\u3057\u307E\u3057\u305F',\n      details: error.message\n    }, 500, corsHeaders);\n  }\n}\n\nasync function getQuestionSets(env, subjectCode, corsHeaders) {\n  try {\n    const sets = await env.TESTAPP_DB.prepare(`\n      SELECT qs.*, s.name as subject_name, u.display_name as creator_name,\n             COUNT(q.id) as question_count\n      FROM question_sets qs\n      JOIN subjects s ON qs.subject_id = s.id\n      JOIN users u ON qs.created_by = u.id\n      LEFT JOIN questions q ON qs.id = q.question_set_id\n      WHERE s.code = ? AND qs.is_active = TRUE\n      GROUP BY qs.id\n      ORDER BY qs.created_at DESC\n    `).bind(subjectCode).all();\n\n    return jsonResponse({\n      sets: sets.results\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('\u554F\u984C\u30BB\u30C3\u30C8\u4E00\u89A7\u53D6\u5F97\u30A8\u30E9\u30FC:', error);\n    return jsonResponse({\n      error: '\u554F\u984C\u30BB\u30C3\u30C8\u4E00\u89A7\u306E\u53D6\u5F97\u306B\u5931\u6557\u3057\u307E\u3057\u305F',\n      details: error.message\n    }, 500, corsHeaders);\n  }\n}\n\nasync function uploadAudio(request, env, user, corsHeaders) {\n  try {\n    const formData = await request.formData();\n    const file = formData.get('audio');\n\n    if (!file) {\n      return jsonResponse({ error: '\u30D5\u30A1\u30A4\u30EB\u304C\u9078\u629E\u3055\u308C\u3066\u3044\u307E\u305B\u3093' }, 400, corsHeaders);\n    }\n\n    const timestamp = Date.now();\n    const randomId = Math.random().toString(36).substring(2, 10);\n    const extension = file.name.split('.').pop();\n    const filename = `assets/audio/${timestamp}_${randomId}.${extension}`;\n\n    await env.QUESTA_BUCKET.put(filename, file.stream(), {\n      httpMetadata: {\n        contentType: file.type,\n      },\n      customMetadata: {\n        'original-name': file.name,\n        'uploaded-by': user.username,\n        'timestamp': timestamp.toString()\n      }\n    });\n\n    await env.TESTAPP_DB.prepare(\n      'INSERT INTO audio_files (filename, original_name, r2_key, file_size, mime_type, uploaded_by) VALUES (?, ?, ?, ?, ?, ?)'\n    ).bind(filename, file.name, filename, file.size, file.type, user.id).run();\n\n    const publicUrl = `https://pub-3e45f268c1214f3cb9503d996a985f3c.r2.dev/${filename}`;\n\n    return jsonResponse({\n      success: true,\n      filename: filename,\n      url: publicUrl,\n      originalName: file.name,\n      size: file.size,\n      uploadedAt: new Date(timestamp).toISOString()\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('\u97F3\u58F0\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u30A8\u30E9\u30FC:', error);\n    return jsonResponse({\n      error: '\u30D5\u30A1\u30A4\u30EB\u306E\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u306B\u5931\u6557\u3057\u307E\u3057\u305F',\n      details: error.message\n    }, 500, corsHeaders);\n  }\n}\n\nasync function listAudioFiles(env, corsHeaders) {\n  try {\n    const audioFiles = await env.TESTAPP_DB.prepare(`\n      SELECT af.*, u.display_name as uploader_name\n      FROM audio_files af\n      JOIN users u ON af.uploaded_by = u.id\n      ORDER BY af.uploaded_at DESC\n      LIMIT 100\n    `).all();\n\n    const files = audioFiles.results.map(file => ({\n      id: file.id,\n      filename: file.filename,\n      originalName: file.original_name,\n      url: `https://pub-3e45f268c1214f3cb9503d996a985f3c.r2.dev/${file.r2_key}`,\n      size: file.file_size,\n      mimeType: file.mime_type,\n      uploadedAt: file.uploaded_at,\n      uploaderName: file.uploader_name\n    }));\n\n    return jsonResponse({ files }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('\u97F3\u58F0\u30D5\u30A1\u30A4\u30EB\u4E00\u89A7\u53D6\u5F97\u30A8\u30E9\u30FC:', error);\n    return jsonResponse({\n      error: '\u97F3\u58F0\u30D5\u30A1\u30A4\u30EB\u4E00\u89A7\u306E\u53D6\u5F97\u306B\u5931\u6557\u3057\u307E\u3057\u305F',\n      details: error.message\n    }, 500, corsHeaders);\n  }\n}\n\n// === \u30E6\u30FC\u30C6\u30A3\u30EA\u30C6\u30A3\u95A2\u6570 ===\n\n// WebAuthn utility functions\nfunction generateChallenge() {\n  const array = new Uint8Array(32);\n  crypto.getRandomValues(array);\n  return Array.from(array, byte => byte.toString(16).padStart(2, '0')).join('');\n}\n\nfunction generateSessionToken() {\n  const array = new Uint8Array(32);\n  crypto.getRandomValues(array);\n  return Array.from(array, byte => byte.toString(16).padStart(2, '0')).join('');\n}\n\nfunction base64ToArrayBuffer(base64) {\n  const binary = atob(base64);\n  const buffer = new ArrayBuffer(binary.length);\n  const view = new Uint8Array(buffer);\n  for (let i = 0; i < binary.length; i++) {\n    view[i] = binary.charCodeAt(i);\n  }\n  return buffer;\n}\n\nfunction arrayBufferToBase64(buffer) {\n  const bytes = new Uint8Array(buffer);\n  let binary = '';\n  bytes.forEach((b) => binary += String.fromCharCode(b));\n  return btoa(binary);\n}\n\n// === \u7D71\u8A08\u30FB\u8A55\u4FA1\u30A8\u30F3\u30C9\u30DD\u30A4\u30F3\u30C8\u5B9F\u88C5 ===\n\n/**\n * Get question statistics\n */\nasync function getQuestionStats(request, env, corsHeaders) {\n  try {\n    const url = new URL(request.url);\n    const ids = url.searchParams.get('ids');\n\n    if (!ids) {\n      return jsonResponse({\n        success: false,\n        error: 'Question IDs are required'\n      }, 400, corsHeaders);\n    }\n\n    const questionIds = ids.split(',').map(id => id.trim()).filter(id => id);\n\n    if (questionIds.length === 0) {\n      return jsonResponse({\n        success: false,\n        error: 'Valid question IDs are required'\n      }, 400, corsHeaders);\n    }\n\n    const placeholders = questionIds.map(() => '?').join(',');\n\n    const { results } = await env.TESTAPP_DB.prepare(`\n      SELECT\n        question_id,\n        selected_choice,\n        COUNT(*) as choice_count,\n        SUM(CASE WHEN is_correct = 1 THEN 1 ELSE 0 END) as correct_count\n      FROM question_attempts\n      WHERE question_id IN (${placeholders})\n      GROUP BY question_id, selected_choice\n    `).bind(...questionIds).all();\n\n    // \u7D71\u8A08\u30C7\u30FC\u30BF\u3092\u6574\u5F62\n    const statsMap = {};\n\n    results.forEach(row => {\n      if (!statsMap[row.question_id]) {\n        statsMap[row.question_id] = {\n          question_id: row.question_id,\n          total_attempts: 0,\n          correct_count: 0,\n          choice_distribution: {}\n        };\n      }\n\n      statsMap[row.question_id].total_attempts += row.choice_count;\n      statsMap[row.question_id].correct_count += row.correct_count || 0;\n\n      if (row.selected_choice !== null) {\n        statsMap[row.question_id].choice_distribution[row.selected_choice] = row.choice_count;\n      }\n    });\n\n    const stats = Object.values(statsMap);\n\n    return jsonResponse({\n      success: true,\n      stats: stats\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('Get question stats error:', error);\n    return jsonResponse({\n      error: 'Failed to get question statistics',\n      details: error.message\n    }, 500, corsHeaders);\n  }\n}\n\n/**\n * Record question attempts\n */\nasync function recordQuestionAttempts(request, env, corsHeaders) {\n  try {\n    const authHeader = request.headers.get('Authorization');\n    let userId = null;\n\n    // \u8A8D\u8A3C\u30C8\u30FC\u30AF\u30F3\u304C\u3042\u308C\u3070\u30E6\u30FC\u30B6\u30FCID\u3092\u53D6\u5F97\uFF08\u30AA\u30D7\u30B7\u30E7\u30F3\uFF09\n    if (authHeader && authHeader.startsWith('Bearer ')) {\n      const token = authHeader.substring(7);\n      try {\n        const session = await env.TESTAPP_DB.prepare(\n          'SELECT user_id FROM sessions WHERE session_token = ? AND expires_at > ?'\n        ).bind(token, new Date().toISOString()).first();\n\n        if (session) {\n          userId = session.user_id;\n        }\n      } catch (e) {\n        // Continue without userId\n      }\n    }\n\n    const body = await request.json();\n    const { attempts } = body;\n\n    if (!attempts || !Array.isArray(attempts) || attempts.length === 0) {\n      return jsonResponse({\n        success: false,\n        error: 'Attempts array is required'\n      }, 400, corsHeaders);\n    }\n\n    const timestamp = new Date().toISOString();\n\n    // \u30D0\u30C3\u30C1\u30A4\u30F3\u30B5\u30FC\u30C8\n    const insertPromises = attempts.map(attempt => {\n      return env.TESTAPP_DB.prepare(`\n        INSERT INTO question_attempts\n        (question_id, user_id, selected_choice, is_correct, created_at)\n        VALUES (?, ?, ?, ?, ?)\n      `).bind(\n        attempt.question_id,\n        userId,\n        attempt.selected_choice !== undefined ? attempt.selected_choice : null,\n        attempt.is_correct ? 1 : 0,\n        timestamp\n      ).run();\n    });\n\n    await Promise.all(insertPromises);\n\n    return jsonResponse({\n      success: true,\n      message: 'Attempts recorded successfully',\n      count: attempts.length\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('Record question attempts error:', error);\n    return jsonResponse({\n      error: 'Failed to record question attempts',\n      details: error.message\n    }, 500, corsHeaders);\n  }\n}\n\n/**\n * Rate question (thumbs up/down)\n */\nasync function rateQuestion(request, env, corsHeaders) {\n  try {\n    const authHeader = request.headers.get('Authorization');\n    let userId = null;\n\n    // \u8A8D\u8A3C\u30C8\u30FC\u30AF\u30F3\u304C\u3042\u308C\u3070\u30E6\u30FC\u30B6\u30FCID\u3092\u53D6\u5F97\uFF08\u30AA\u30D7\u30B7\u30E7\u30F3\uFF09\n    if (authHeader && authHeader.startsWith('Bearer ')) {\n      const token = authHeader.substring(7);\n      try {\n        const session = await env.TESTAPP_DB.prepare(\n          'SELECT user_id FROM sessions WHERE session_token = ? AND expires_at > ?'\n        ).bind(token, new Date().toISOString()).first();\n\n        if (session) {\n          userId = session.user_id;\n        }\n      } catch (e) {\n        // Continue without userId\n      }\n    }\n\n    const body = await request.json();\n    const { question_id, rating } = body;\n\n    if (!question_id) {\n      return jsonResponse({\n        success: false,\n        error: 'question_id is required'\n      }, 400, corsHeaders);\n    }\n\n    if (rating !== 1 && rating !== -1) {\n      return jsonResponse({\n        success: false,\n        error: 'rating must be 1 (thumbs up) or -1 (thumbs down)'\n      }, 400, corsHeaders);\n    }\n\n    const timestamp = new Date().toISOString();\n\n    // UPSERT\u3067\u65E2\u5B58\u306E\u8A55\u4FA1\u3092\u66F4\u65B0\u307E\u305F\u306F\u65B0\u898F\u4F5C\u6210\n    if (userId) {\n      // \u30E6\u30FC\u30B6\u30FC\u8A8D\u8A3C\u6E08\u307F\u306E\u5834\u5408\u306F\u4E00\u610F\u5236\u7D04\u3067UPSERT\n      await env.TESTAPP_DB.prepare(`\n        INSERT INTO question_ratings (question_id, user_id, rating, created_at)\n        VALUES (?, ?, ?, ?)\n        ON CONFLICT(question_id, user_id)\n        DO UPDATE SET rating = excluded.rating, created_at = excluded.created_at\n      `).bind(question_id, userId, rating, timestamp).run();\n    } else {\n      // \u30B2\u30B9\u30C8\u306E\u5834\u5408\u306F\u5358\u7D14\u306BINSERT\n      await env.TESTAPP_DB.prepare(`\n        INSERT INTO question_ratings (question_id, user_id, rating, created_at)\n        VALUES (?, ?, ?, ?)\n      `).bind(question_id, null, rating, timestamp).run();\n    }\n\n    return jsonResponse({\n      success: true,\n      message: 'Rating recorded successfully'\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('Rate question error:', error);\n    return jsonResponse({\n      error: 'Failed to rate question',\n      details: error.message\n    }, 500, corsHeaders);\n  }\n}\n\n/**\n * Get question ratings\n */\nasync function getQuestionRatings(request, env, corsHeaders) {\n  try {\n    const url = new URL(request.url);\n    const ids = url.searchParams.get('ids');\n\n    if (!ids) {\n      return jsonResponse({\n        success: false,\n        error: 'Question IDs are required'\n      }, 400, corsHeaders);\n    }\n\n    const questionIds = ids.split(',').map(id => id.trim()).filter(id => id);\n\n    if (questionIds.length === 0) {\n      return jsonResponse({\n        success: false,\n        error: 'Valid question IDs are required'\n      }, 400, corsHeaders);\n    }\n\n    const placeholders = questionIds.map(() => '?').join(',');\n\n    const { results } = await env.TESTAPP_DB.prepare(`\n      SELECT\n        question_id,\n        SUM(CASE WHEN rating = 1 THEN 1 ELSE 0 END) as thumbs_up,\n        SUM(CASE WHEN rating = -1 THEN 1 ELSE 0 END) as thumbs_down,\n        COUNT(*) as total_ratings\n      FROM question_ratings\n      WHERE question_id IN (${placeholders})\n      GROUP BY question_id\n    `).bind(...questionIds).all();\n\n    const ratingsMap = {};\n    results.forEach(row => {\n      ratingsMap[row.question_id] = {\n        question_id: row.question_id,\n        thumbs_up: row.thumbs_up || 0,\n        thumbs_down: row.thumbs_down || 0,\n        total_ratings: row.total_ratings || 0\n      };\n    });\n\n    const ratings = Object.values(ratingsMap);\n\n    return jsonResponse({\n      success: true,\n      ratings: ratings\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('Get question ratings error:', error);\n    return jsonResponse({\n      error: 'Failed to get question ratings',\n      details: error.message\n    }, 500, corsHeaders);\n  }\n}\n\n// ===== \u624B\u52D5\u30EA\u30AB\u30D0\u30EA\u30FC\u30B7\u30B9\u30C6\u30E0API =====\n\n/**\n * POST /api/recovery/request\n * \u30E6\u30FC\u30B6\u30FC\u304C\u30EA\u30AB\u30D0\u30EA\u30FC\u3092\u7533\u8ACB\n */\nasync function handleRecoveryRequest(request, env, corsHeaders) {\n  try {\n    const { userId, secretAnswer, contactInfo, additionalInfo } = await request.json();\n\n    if (!userId || !secretAnswer || !contactInfo) {\n      return jsonResponse({\n        success: false,\n        error: '\u30E6\u30FC\u30B6\u30FCID\u3001\u79D8\u5BC6\u306E\u8CEA\u554F\u306E\u7B54\u3048\u3001\u9023\u7D61\u5148\u304C\u5FC5\u8981\u3067\u3059'\n      }, 400, corsHeaders);\n    }\n\n    const clientIP = request.headers.get('CF-Connecting-IP') ||\n                     request.headers.get('X-Forwarded-For')?.split(',')[0] ||\n                     'unknown';\n\n    // \u30E6\u30FC\u30B6\u30FC\u691C\u7D22\n    const user = await env.TESTAPP_DB.prepare(\n      'SELECT id FROM users WHERE username = ?'\n    ).bind(userId).first();\n\n    // \u30EA\u30AB\u30D0\u30EA\u30FC\u8981\u6C42\u3092\u4FDD\u5B58\uFF08\u30E6\u30FC\u30B6\u30FC\u304C\u5B58\u5728\u3057\u306A\u3044\u5834\u5408\u3082null\u3067\u4FDD\u5B58\uFF09\n    await env.TESTAPP_DB.prepare(\n      'INSERT INTO recovery_requests (user_id, username, secret_answer_provided, contact_info, additional_info, ip_address) VALUES (?, ?, ?, ?, ?, ?)'\n    ).bind(\n      user?.id || null,\n      userId,\n      secretAnswer,\n      contactInfo,\n      additionalInfo || null,\n      clientIP\n    ).run();\n\n    return jsonResponse({\n      success: true,\n      message: '\u30EA\u30AB\u30D0\u30EA\u30FC\u7533\u8ACB\u3092\u53D7\u3051\u4ED8\u3051\u307E\u3057\u305F\u3002\u7BA1\u7406\u8005\u304C\u672C\u4EBA\u78BA\u8A8D\u3092\u884C\u3044\u307E\u3059\u3002'\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('Recovery request error:', error);\n    return jsonResponse({\n      success: false,\n      error: '\u30B5\u30FC\u30D0\u30FC\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F'\n    }, 500, corsHeaders);\n  }\n}\n\n/**\n * GET /api/admin/user/:userId\n * \u7BA1\u7406\u8005\u304C\u30E6\u30FC\u30B6\u30FC\u60C5\u5831\u3092\u53D6\u5F97\n */\nasync function handleAdminGetUser(request, env, corsHeaders) {\n  try {\n    const url = new URL(request.url);\n    const userId = url.pathname.split('/').pop();\n\n    const user = await env.TESTAPP_DB.prepare(\n      'SELECT id, username, display_name, secret_question, secret_answer_hash, created_at, last_login FROM users WHERE username = ?'\n    ).bind(userId).first();\n\n    if (!user) {\n      return jsonResponse({\n        success: false,\n        error: '\u30E6\u30FC\u30B6\u30FC\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093'\n      }, 404, corsHeaders);\n    }\n\n    // \u30D1\u30B9\u30AD\u30FC\u6570\u3092\u53D6\u5F97\n    const passkeyCount = await env.TESTAPP_DB.prepare(\n      'SELECT COUNT(*) as count FROM webauthn_credentials WHERE user_id = ?'\n    ).bind(user.id).first();\n\n    return jsonResponse({\n      success: true,\n      user: {\n        id: user.id,\n        username: user.username,\n        display_name: user.display_name,\n        secret_question: user.secret_question,\n        secret_answer_hash: user.secret_answer_hash,\n        created_at: user.created_at,\n        last_login: user.last_login,\n        passkey_count: passkeyCount.count\n      }\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('Admin get user error:', error);\n    return jsonResponse({\n      success: false,\n      error: '\u30B5\u30FC\u30D0\u30FC\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F'\n    }, 500, corsHeaders);\n  }\n}\n\n/**\n * POST /api/admin/recovery/approve\n * \u7BA1\u7406\u8005\u304C\u30EA\u30AB\u30D0\u30EA\u30FC\u3092\u627F\u8A8D\uFF08\u30D1\u30B9\u30AD\u30FC\u524A\u9664\uFF09\n */\nasync function handleAdminApproveRecovery(request, env, corsHeaders) {\n  try {\n    const { userId } = await request.json();\n\n    if (!userId) {\n      return jsonResponse({\n        success: false,\n        error: '\u30E6\u30FC\u30B6\u30FCID\u304C\u5FC5\u8981\u3067\u3059'\n      }, 400, corsHeaders);\n    }\n\n    // \u30E6\u30FC\u30B6\u30FC\u306E\u3059\u3079\u3066\u306E\u30D1\u30B9\u30AD\u30FC\u3092\u524A\u9664\n    const result = await env.TESTAPP_DB.prepare(\n      'DELETE FROM webauthn_credentials WHERE user_id = ?'\n    ).bind(userId).run();\n\n    // \u30BB\u30C3\u30B7\u30E7\u30F3\u3082\u524A\u9664\n    await env.TESTAPP_DB.prepare(\n      'DELETE FROM auth_sessions WHERE user_id = ?'\n    ).bind(userId).run();\n\n    return jsonResponse({\n      success: true,\n      message: `${result.meta.changes}\u500B\u306E\u30D1\u30B9\u30AD\u30FC\u3092\u524A\u9664\u3057\u307E\u3057\u305F`,\n      deletedCount: result.meta.changes\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('Admin approve recovery error:', error);\n    return jsonResponse({\n      success: false,\n      error: '\u30B5\u30FC\u30D0\u30FC\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F'\n    }, 500, corsHeaders);\n  }\n}\n\n/**\n * GET /api/admin/recovery/requests?filter=pending|all\n * \u7BA1\u7406\u8005\u304C\u30EA\u30AB\u30D0\u30EA\u30FC\u8981\u6C42\u4E00\u89A7\u3092\u53D6\u5F97\n */\nasync function handleAdminGetRecoveryRequests(request, env, corsHeaders) {\n  try {\n    const url = new URL(request.url);\n    const filter = url.searchParams.get('filter') || 'all';\n\n    let query = 'SELECT * FROM recovery_requests';\n    if (filter === 'pending') {\n      query += ' WHERE status = \"pending\"';\n    }\n    query += ' ORDER BY requested_at DESC LIMIT 50';\n\n    const requests = await env.TESTAPP_DB.prepare(query).all();\n\n    return jsonResponse({\n      success: true,\n      requests: requests.results || []\n    }, 200, corsHeaders);\n\n  } catch (error) {\n    console.error('Admin get recovery requests error:', error);\n    return jsonResponse({\n      success: false,\n      error: '\u30B5\u30FC\u30D0\u30FC\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F'\n    }, 500, corsHeaders);\n  }\n}\n\n// JSON\u30EC\u30B9\u30DD\u30F3\u30B9\u751F\u6210\u30D8\u30EB\u30D1\u30FC\nfunction jsonResponse(data, status = 200, headers = {}) {\n  return new Response(JSON.stringify(data, null, 2), {\n    status: status,\n    headers: {\n      'Content-Type': 'application/json',\n      ...headers\n    }\n  });\n}", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/home/higuc/sys/cloudflare-worker-learning-notebook-complete.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/usr/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/usr/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/home/higuc/sys/cloudflare-worker-learning-notebook-complete.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/home/higuc/sys/.wrangler/tmp/bundle-PJ7Vbo/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/usr/lib/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/home/higuc/sys/.wrangler/tmp/bundle-PJ7Vbo/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/home/higuc/sys/.wrangler/tmp/bundle-PJ7Vbo/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["result"]
}
